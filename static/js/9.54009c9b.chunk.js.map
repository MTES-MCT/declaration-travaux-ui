{"version":3,"sources":["utils/axios-keycloak.js","utils/api-real.js"],"names":["AxiosKeycloak","config","instance","axios","create","interceptors","request","use","Promise","resolve","reject","updateToken","success","headers","Authorization","token","error","login","response","data","cause","Keycloak","keycloak","url","env","realm","clientId","apiHttpClient","createAxiosInstance","baseURL","responseType","responseEncoding","withCredentials","api","auth","console","log","init","onLoad","authenticated","Error","isAuthenticated","logout","getUser","loadUserInfo","userInfo","firstName","given_name","lastName","family_name","email","isDeposant","hasRealmRole","isMairie","isInstructeur","isBeta","dossiers","listerDossiers","get","then","res","consulterDossier","id","ajouterDossier","formData","post","catch","JSON","stringify","supprimerDossier","delete","savePieceJointe","dossierId","numero","lireFichier","fichierId","content_disposition","content_type","matches","exec","fileInfo","URL","createObjectURL","Blob","type","nom","extractFileInfo","qualifierDossier"],"mappings":"0LAGqBA,E,4LACCC,GAAS,IAAD,OACpBC,EAAWC,IAAMC,OAAOH,GAkC9B,OAhCAC,EAASG,aAAaC,QAAQC,KAC5B,SAAAN,GAAM,OACJ,IAAIO,SAAQ,SAACC,EAASC,GAAV,OACV,EAAKC,YAAY,GACdC,SAAQ,WACPX,EAAOY,QAAQC,cAAgB,UAAY,EAAKC,MAChDN,EAAQR,MAETe,OAAM,WACL,EAAKC,iBAIff,EAASG,aAAaa,SAASX,KAC7B,SAASW,GACP,OAAOA,KAET,SAASF,GACP,OAAIA,EAAME,SACJF,EAAME,SAASC,KAAKC,MACfZ,QAAQE,OAAOM,EAAME,SAASC,KAAKC,OAEnCZ,QAAQE,OAAOM,EAAME,SAASC,MAE9BH,EAAMV,QACRE,QAAQE,OAAOM,EAAMV,SAErBE,QAAQE,OAAOM,MAKrBd,K,6BAIP,OAAOC,Q,UAxCgCkB,G,SCErCC,EAAW,IAAItB,EAAc,CACjCuB,IAAKC,YAAI,yBACTC,MAAOD,YAAI,2BACXE,SAAUF,YAAI,iCAGVG,EAAgBL,EAASM,oBAAoB,CACjDC,QAASL,YAAI,qBACbM,aAAc,OACdC,iBAAkB,OAClBlB,QAAS,CAAE,eAAgB,kCAC3BmB,iBAAiB,IAuOnB,IAoBMC,EAAM,CACVC,KArBW,CACXjB,MArOF,WACE,OAAO,IAAIT,SAAQ,SAACC,EAASC,GAE3B,OADAyB,QAAQC,IAAI,SACLd,EACJe,KAAK,CAAEC,OAAQ,mBACf1B,SAAQ,SAAA2B,GACP,OAAO9B,EAAQ8B,MAEhBvB,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,WA6N9ByB,gBA3MF,WACE,OAAO,IAAIjC,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJe,KAAK,CAAEC,OAAQ,cACf1B,SAAQ,SAAA2B,GACP,OAAO9B,EAAQ8B,MAEhBvB,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,WAoM9B0B,OAzNF,WACE,OAAO,IAAIlC,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJoB,SACA9B,SAAQ,SAAA2B,GACP,OAAO9B,EAAQ8B,MAEhBvB,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,WAkN9B2B,QAzKF,WACE,OAAO,IAAInC,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJsB,eACAhC,SAAQ,SAAAiC,GACP,OAAOpC,EAAQ,CACbqC,UAAWD,EAASE,WACpBC,SAAUH,EAASI,YACnBC,MAAOL,EAASK,WAGnBlC,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,WA8J9BmC,WAjMF,WACE,OAAO,IAAI3C,SAAQ,SAACC,EAASC,GAC3B,OAAOD,EAAQa,EAAS8B,aAAa,iBAgMvCC,SA7LF,WACE,OAAO,IAAI7C,SAAQ,SAACC,EAASC,GAC3B,OAAOD,EAAQa,EAAS8B,aAAa,eA4LvCE,cAxLF,WACE,OAAO,IAAI9C,SAAQ,SAACC,EAASC,GAC3B,OAAOD,EAAQa,EAAS8B,aAAa,oBAuLvCG,OAnLF,WACE,OAAO,IAAI/C,SAAQ,SAACC,EAASC,GAC3B,OAAOD,EAAQa,EAAS8B,aAAa,cA+LvCI,SAZe,CACfC,eA/JF,WACE,OAAO,IAAIjD,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJe,KAAK,CAAEC,OAAQ,cACf1B,SAAQ,SAAA2B,GACP,OAAO9B,EAAQkB,EAAc+B,IAAd,aAA+BC,MAAK,SAAAC,GAAG,OAAIA,EAAIzC,YAE/DH,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,WAwJ9B6C,iBAnJF,SAA0BC,GACxB,OAAO,IAAItD,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJe,KAAK,CAAEC,OAAQ,cACf1B,SAAQ,SAAA2B,GACP,OAAO9B,EACLkB,EAAc+B,IAAd,oBAA+BI,IAAMH,MAAK,SAAAC,GAAG,OAAIA,EAAIzC,YAGxDH,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,WA0I9B+C,eAtGF,SAAwBC,GACtB,OAAO,IAAIxD,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJe,KAAK,CAAEC,OAAQ,cACf1B,SAAQ,SAAA2B,GACPZ,EACGsC,KADH,YACqBD,EAAU,CAC3BnD,QAAS,CACP,eACE,yDAGL8C,MAAK,SAASzC,GACb,OAAOT,EAAQS,MAEhBgD,OAAM,SAASlD,GAEd,OADAmB,QAAQC,IAAI,SAAU+B,KAAKC,UAAUpD,IAC9BN,EAAOM,SAGnBA,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,WAkF9BqD,iBAtIF,SAA0BP,GACxB,OAAO,IAAItD,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJe,KAAK,CAAEC,OAAQ,cACf1B,SAAQ,SAAA2B,GACP,OAAO9B,EACLkB,EAAc2C,OAAd,oBAAkCR,IAAMH,MAAK,SAAAC,GAAG,OAAIA,EAAIzC,YAG3DH,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,WA6H9BuD,gBA9EF,SAAyBC,EAAWC,EAAQT,GAC1C,OAAO,IAAIxD,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJe,KAAK,CAAEC,OAAQ,cACf1B,SAAQ,SAAA2B,GACP,OAAO9B,EACLkB,EACGsC,KADH,oBACqBO,EADrB,0BACgDC,GAAUT,EAAU,CAChEnD,QAAS,CACP,eACE,yDAGLqD,OAAM,SAASlD,GAEd,OADAmB,QAAQC,IAAI,SAAU+B,KAAKC,UAAUpD,IAC9BN,EAAOM,UAIrBA,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,WA2D9B0D,YAtCF,SAAqBC,GAEnB,OADAxC,QAAQC,IAAI,aAAcuC,GACnB,IAAInE,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJe,KAAK,CAAEC,OAAQ,cACf1B,SAAQ,SAAA2B,GACP,OAAO9B,EACLkB,EACG+B,IADH,oBACoBiB,GAAa,CAAE7C,aAAc,SAC9C6B,MAAK,SAAAzC,GAAQ,OAzB1B,SAAyBA,GACvB,IACI0D,EAAsB1D,EAASL,QAAQ,uBACvCgE,EAAe3D,EAASL,QAAQ,gBAChCiE,EAHiB,wFAGQC,KAAKH,GAC9BI,EAAW,CACb7D,KAAM8D,IAAIC,gBACR,IAAIC,KAAK,CAACjE,EAASC,MAAO,CAAEiE,KAAMP,KAEpCQ,IAAKP,EAAQ,GACbM,KAAMP,GAGR,OADA1C,QAAQC,IAAI,YAAa4C,GAClBA,EAYqBM,CAAgBpE,MACjCgD,OAAM,SAASlD,GAEd,OADAmB,QAAQC,IAAI,SAAU+B,KAAKC,UAAUpD,IAC9BN,EAAOM,UAIrBA,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,WAsB9BuE,iBA1HF,SAA0BzB,GACxB,OAAO,IAAItD,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJe,KAAK,CAAEC,OAAQ,cACf1B,SAAQ,SAAA2B,GAEP,OADAJ,QAAQC,IAAI,MAAO+B,KAAKC,UAAUN,IAC3BrD,EACLkB,EAAcsC,KAAd,oBAAgCH,EAAhC,eAAgDH,MAAK,SAAAC,GAAG,OAAIA,EAAIzC,YAGnEH,OAAM,SAAAA,GACL,OAAON,EAAO,IAAI8B,MAAMxB,aAuHjBiB","file":"static/js/9.54009c9b.chunk.js","sourcesContent":["import axios from 'axios';\nimport Keycloak from 'keycloak-js';\n\nexport default class AxiosKeycloak extends Keycloak {\n  createAxiosInstance(config) {\n    const instance = axios.create(config);\n\n    instance.interceptors.request.use(\n      config =>\n        new Promise((resolve, reject) =>\n          this.updateToken(5)\n            .success(() => {\n              config.headers.Authorization = 'Bearer ' + this.token;\n              resolve(config);\n            })\n            .error(() => {\n              this.login();\n            })\n        )\n    );\n    instance.interceptors.response.use(\n      function(response) {\n        return response;\n      },\n      function(error) {\n        if (error.response) {\n          if (error.response.data.cause) {\n            return Promise.reject(error.response.data.cause);\n          } else {\n            return Promise.reject(error.response.data);\n          }\n        } else if (error.request) {\n          return Promise.reject(error.request);\n        } else {\n          return Promise.reject(error);\n        }\n      }\n    );\n\n    return instance;\n  }\n\n  static get axios() {\n    return axios;\n  }\n}\n","import AxiosKeycloak from 'utils/axios-keycloak';\nimport { env } from 'utils/env-helper';\n\n// API rÃ©elle\n\nconst keycloak = new AxiosKeycloak({\n  url: env('REACT_APP_SSO_APP_URL'),\n  realm: env('REACT_APP_SSO_APP_REALM'),\n  clientId: env('REACT_APP_SSO_APP_CLIENT_ID')\n});\n\nconst apiHttpClient = keycloak.createAxiosInstance({\n  baseURL: env('REACT_APP_API_URL'),\n  responseType: 'json',\n  responseEncoding: 'utf8',\n  headers: { 'Content-Type': 'application/json;charset=UTF-8' },\n  withCredentials: true\n});\n\nfunction login() {\n  return new Promise((resolve, reject) => {\n    console.log('login');\n    return keycloak\n      .init({ onLoad: 'login-required' })\n      .success(authenticated => {\n        return resolve(authenticated);\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction logout() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .logout()\n      .success(authenticated => {\n        return resolve(authenticated);\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction isAuthenticated() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(authenticated);\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction isDeposant() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('DEPOSANT'));\n  });\n}\nfunction isMairie() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('MAIRIE'));\n  });\n}\n\nfunction isInstructeur() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('INSTRUCTEUR'));\n  });\n}\n\nfunction isBeta() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('BETA'));\n  });\n}\n\nfunction getUser() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .loadUserInfo()\n      .success(userInfo => {\n        return resolve({\n          firstName: userInfo.given_name,\n          lastName: userInfo.family_name,\n          email: userInfo.email\n        });\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction listerDossiers() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(apiHttpClient.get(`/dossiers`).then(res => res.data));\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction consulterDossier(id) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient.get(`/dossiers/${id}`).then(res => res.data)\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction supprimerDossier(id) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient.delete(`/dossiers/${id}`).then(res => res.data)\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction qualifierDossier(id) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        console.log('id=', JSON.stringify(id));\n        return resolve(\n          apiHttpClient.post(`/dossiers/${id}/qualifier`).then(res => res.data)\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction ajouterDossier(formData) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        apiHttpClient\n          .post(`/dossiers`, formData, {\n            headers: {\n              'content-type':\n                'multipart/form-data;boundary=gc0p4Jq0M2Yt08jU534c0p'\n            }\n          })\n          .then(function(response) {\n            return resolve(response);\n          })\n          .catch(function(error) {\n            console.log('error=', JSON.stringify(error));\n            return reject(error);\n          });\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction savePieceJointe(dossierId, numero, formData) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient\n            .post(`/dossiers/${dossierId}/piecesjointes/${numero}`, formData, {\n              headers: {\n                'content-type':\n                  'multipart/form-data;boundary=gc0p4Jq0M2Yt08jU534c0p'\n              }\n            })\n            .catch(function(error) {\n              console.log('error=', JSON.stringify(error));\n              return reject(error);\n            })\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction extractFileInfo(response) {\n  let regex_filename = /^attachment;filename=([\\w- Ã©Ã¨Ã«Ã Ã¹â¬ÃªÃ´Ã¯Ã®]+[.]{1}[\\w]+)$/i;\n  let content_disposition = response.headers['content-disposition'];\n  let content_type = response.headers['content-type'];\n  let matches = regex_filename.exec(content_disposition);\n  let fileInfo = {\n    data: URL.createObjectURL(\n      new Blob([response.data], { type: content_type })\n    ),\n    nom: matches[1],\n    type: content_type\n  };\n  console.log('fileInfo=', fileInfo);\n  return fileInfo;\n}\n\nfunction lireFichier(fichierId) {\n  console.log('fichierId=', fichierId);\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient\n            .get(`/fichiers/${fichierId}`, { responseType: 'blob' })\n            .then(response => extractFileInfo(response))\n            .catch(function(error) {\n              console.log('error=', JSON.stringify(error));\n              return reject(error);\n            })\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nconst auth = {\n  login,\n  isAuthenticated,\n  logout,\n  getUser,\n  isDeposant,\n  isMairie,\n  isInstructeur,\n  isBeta\n};\nconst dossiers = {\n  listerDossiers,\n  consulterDossier,\n  ajouterDossier,\n  supprimerDossier,\n  savePieceJointe,\n  lireFichier,\n  qualifierDossier\n};\n\nconst api = {\n  auth,\n  dossiers\n};\n\nexport default api;\n"],"sourceRoot":""}