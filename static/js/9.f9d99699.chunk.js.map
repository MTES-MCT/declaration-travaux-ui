{"version":3,"sources":["utils/axios-keycloak.js","utils/api-real.js"],"names":["AxiosKeycloak","config","instance","axios","create","interceptors","request","use","Promise","resolve","reject","updateToken","success","headers","Authorization","token","error","login","Keycloak","keycloak","url","env","realm","clientId","apiHttpClient","createAxiosInstance","baseURL","responseType","responseEncoding","withCredentials","api","auth","console","log","init","onLoad","authenticated","Error","isAuthenticated","logout","getUser","loadUserInfo","userInfo","firstName","given_name","lastName","family_name","email","isDeposant","hasRealmRole","isInstructeur","isBeta","depots","mesDepots","get","then","res","data","monDepot","id","ajouterDepot","formData","post","supprimerDepot","delete","savePieceJointe","dossierId","numero","lireFichier","fichierId","response","content_disposition","content_type","matches","exec","URL","createObjectURL","Blob","type","nom","extractFileInfo"],"mappings":"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","file":"static/js/9.f9d99699.chunk.js","sourcesContent":["import axios from 'axios';\nimport Keycloak from 'keycloak-js';\n\nexport default class AxiosKeycloak extends Keycloak {\n  createAxiosInstance(config) {\n    const instance = axios.create(config);\n\n    instance.interceptors.request.use(\n      config =>\n        new Promise((resolve, reject) =>\n          this.updateToken(5)\n            .success(() => {\n              config.headers.Authorization = 'Bearer ' + this.token;\n              resolve(config);\n            })\n            .error(() => {\n              this.login();\n            })\n        )\n    );\n\n    return instance;\n  }\n\n  static get axios() {\n    return axios;\n  }\n}\n","import AxiosKeycloak from 'utils/axios-keycloak';\nimport { env } from 'utils/env-helper';\n\n// API rÃ©elle\n\nconst keycloak = new AxiosKeycloak({\n  url: env('REACT_APP_SSO_APP_URL'),\n  realm: env('REACT_APP_SSO_APP_REALM'),\n  clientId: env('REACT_APP_SSO_APP_CLIENT_ID')\n});\n\nconst apiHttpClient = keycloak.createAxiosInstance({\n  baseURL: env('REACT_APP_API_URL'),\n  responseType: 'json',\n  responseEncoding: 'utf8',\n  headers: { 'Content-Type': 'application/json;charset=UTF-8' },\n  withCredentials: true\n});\n\nfunction login() {\n  return new Promise((resolve, reject) => {\n    console.log('login');\n    return keycloak\n      .init({ onLoad: 'login-required' })\n      .success(authenticated => {\n        return resolve(authenticated);\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction logout() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .logout()\n      .success(authenticated => {\n        return resolve(authenticated);\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction isAuthenticated() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(authenticated);\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction isDeposant() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('DEPOSANT'));\n  });\n}\n\nfunction isInstructeur() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('INSTRUCTEUR'));\n  });\n}\n\nfunction isBeta() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('BETA'));\n  });\n}\n\nfunction getUser() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .loadUserInfo()\n      .success(userInfo => {\n        return resolve({\n          firstName: userInfo.given_name,\n          lastName: userInfo.family_name,\n          email: userInfo.email\n        });\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction mesDepots() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(apiHttpClient.get(`/dossiers`).then(res => res.data));\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction monDepot(id) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient.get(`/dossiers/${id}`).then(res => res.data)\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction supprimerDepot(id) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient.delete(`/dossiers/${id}`).then(res => res.data)\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction ajouterDepot(formData) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient.post(`/dossiers`, formData, {\n            headers: {\n              'content-type':\n                'multipart/form-data;boundary=gc0p4Jq0M2Yt08jU534c0p'\n            }\n          })\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction savePieceJointe(dossierId, numero, formData) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient.post(\n            `/dossiers/${dossierId}/piecesjointes/${numero}`,\n            formData,\n            {\n              headers: {\n                'content-type':\n                  'multipart/form-data;boundary=gc0p4Jq0M2Yt08jU534c0p'\n              }\n            }\n          )\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction extractFileInfo(response) {\n  let regex_filename = /^attachment;filename=([\\w]+[.]{1}[\\w]+)$/i;\n  let content_disposition = response.headers['content-disposition'];\n  let content_type = response.headers['content-type'];\n  let matches = regex_filename.exec(content_disposition);\n  return {\n    data: URL.createObjectURL(\n      new Blob([response.data], { type: content_type })\n    ),\n    nom: matches[1],\n    type: content_type\n  };\n}\n\nfunction lireFichier(fichierId) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient\n            .get(`/fichiers/${fichierId}`, { responseType: 'blob' })\n            .then(response => extractFileInfo(response))\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nconst auth = {\n  login,\n  isAuthenticated,\n  logout,\n  getUser,\n  isDeposant,\n  isInstructeur,\n  isBeta\n};\nconst depots = {\n  mesDepots,\n  monDepot,\n  ajouterDepot,\n  supprimerDepot,\n  savePieceJointe,\n  lireFichier\n};\n\nconst api = {\n  auth,\n  depots\n};\n\nexport default api;\n"],"sourceRoot":""}