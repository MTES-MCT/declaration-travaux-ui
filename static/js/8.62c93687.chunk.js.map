{"version":3,"sources":["utils/users-mock.js","utils/api-mock.js"],"names":["users","id","email","firstName","lastName","profil","principal","waitingTime","depotsFixtures","type","date","etat","api","auth","login","Promise","resolve","reject","setTimeout","find","user","JSON","stringify","message","isAuthenticated","logout","getUser","isDepositaire","isInstructeur","depots","mesDepots","page","totalCount","monDepot","depot","savePieceJointe","code","file","binary","sessionStorage","setItem","nom","name","size","data","loadPieceJointe","parse","getItem"],"mappings":"iGAAA,IAiBeA,EAjBD,CACZ,CACEC,GAAI,cACJC,MAAO,wBACPC,UAAW,OACXC,SAAU,SACVC,OAAQ,eAEV,CACEJ,GAAI,iBACJC,MAAO,2BACPC,UAAW,UACXC,SAAU,SACVC,OAAQ,gBCTRC,EAAY,KAEVC,EAAc,IA0DpB,IAAIC,EAAiB,CACnB,CACEP,GAAI,IACJQ,KAAM,KACNC,KAAM,aACNC,KAAM,eAER,CACEV,GAAI,IACJQ,KAAM,OACNC,KAAM,aACNC,KAAM,cAkDV,IAeMC,EAAM,CACVC,KAhBW,CACXC,MAtHF,SAAeb,GACb,OAAO,IAAIc,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAKjB,EAIEe,EAASV,EAAYN,EAAMmB,KAAK,SAAAC,GAAI,OAAIA,EAAKnB,KAAOA,KAHlDgB,EACLI,KAAKC,UAAU,CAAEC,QAAS,6CAG7BhB,MA+GLiB,gBAnGF,WACE,OAAO,IAAIT,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAsB,OAAdV,IACdC,MAgGLkB,OA5GF,WACE,OAAO,IAAIV,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACTF,EAASV,EAAY,OACpBC,MAyGLmB,QA7EF,WACE,OAAO,IAAIX,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAKZ,EAIEU,EAAQV,GAHNW,EACLI,KAAKC,UAAU,CAAEC,QAAS,oCAG7BhB,MAsELoB,cA9FF,WACE,OAAO,IAAIZ,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAyB,gBAAjBV,EAAUL,KACxBM,MA2FLqB,cAvFF,WACE,OAAO,IAAIb,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAyB,mBAAjBV,EAAUL,KACxBM,OA8FLsB,OATa,CACbC,UAvDF,WACE,OAAO,IAAIf,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQ,CACba,OAAQrB,EACRuB,KAAM,EACNC,WAAY,KAEbzB,MAgDL0B,SA5CF,SAAkBhC,GAChB,OAAO,IAAIc,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQR,EAAeW,KAAK,SAAAe,GAAK,OAAIA,EAAMjC,KAAOA,MACxDM,MAyCL4B,gBArCF,SAAyBC,EAAMC,EAAMC,GACnC,OAAO,IAAIvB,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EACLuB,eAAeC,QACbJ,EACAf,KAAKC,UAAU,CACbmB,IAAKJ,EAAKK,KACVjC,KAAM4B,EAAK5B,KACXkC,KAAMN,EAAKM,KACXC,KAAMN,OAIX/B,MAwBLsC,gBApBF,SAAyBT,GACvB,OAAO,IAAIrB,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQK,KAAKyB,MAAMP,eAAeQ,QAAQX,MAChD7B,QAwBQK","file":"static/js/8.62c93687.chunk.js","sourcesContent":["const users = [\n  {\n    id: 'jean.martin',\n    email: 'jean.martin@monfai.fr',\n    firstName: 'Jean',\n    lastName: 'Martin',\n    profil: 'depositaire'\n  },\n  {\n    id: 'jacques.dupont',\n    email: 'jacques.dupont@monfai.fr',\n    firstName: 'Jacques',\n    lastName: 'Dupont',\n    profil: 'instructeur'\n  }\n];\n\nexport default users;\n","import users from './users-mock';\n\n// API de test uniquement\n\nlet principal = null;\n\nconst waitingTime = 100;\n\nfunction login(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (!id)\n        return reject(\n          JSON.stringify({ message: 'Connexion impossible. User id inconnu.' })\n        );\n      return resolve((principal = users.find(user => user.id === id)));\n    }, waitingTime);\n  });\n}\n\nfunction logout() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve((principal = null));\n    }, waitingTime);\n  });\n}\n\nfunction isAuthenticated() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(principal !== null);\n    }, waitingTime);\n  });\n}\n\nfunction isDepositaire() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(principal.id === 'jean.martin');\n    }, waitingTime);\n  });\n}\n\nfunction isInstructeur() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(principal.id === 'jacques.dupont');\n    }, waitingTime);\n  });\n}\n\nfunction getUser() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (!principal)\n        return reject(\n          JSON.stringify({ message: \"Pas d'utilisateur connectÃ©\" })\n        );\n      return resolve(principal);\n    }, waitingTime);\n  });\n}\n\nlet depotsFixtures = [\n  {\n    id: '0',\n    type: 'dp',\n    date: '01/01/2019',\n    etat: 'instruction'\n  },\n  {\n    id: '1',\n    type: 'pcmi',\n    date: '01/07/2019',\n    etat: 'incomplet'\n  }\n];\n\nfunction mesDepots() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve({\n        depots: depotsFixtures,\n        page: 0,\n        totalCount: 1\n      });\n    }, waitingTime);\n  });\n}\n\nfunction monDepot(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(depotsFixtures.find(depot => depot.id === id));\n    }, waitingTime);\n  });\n}\n\nfunction savePieceJointe(code, file, binary) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(\n        sessionStorage.setItem(\n          code,\n          JSON.stringify({\n            nom: file.name,\n            type: file.type,\n            size: file.size,\n            data: binary\n          })\n        )\n      );\n    }, waitingTime);\n  });\n}\n\nfunction loadPieceJointe(code) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(JSON.parse(sessionStorage.getItem(code)));\n    }, waitingTime);\n  });\n}\n\nconst auth = {\n  login,\n  isAuthenticated,\n  logout,\n  getUser,\n  isDepositaire,\n  isInstructeur\n};\nconst depots = {\n  mesDepots,\n  monDepot,\n  savePieceJointe,\n  loadPieceJointe\n};\n\nconst api = {\n  auth,\n  depots\n};\n\nexport default api;\n"],"sourceRoot":""}