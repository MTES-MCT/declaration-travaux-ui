{"version":3,"sources":["authenticated-app.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","routes_authenticated__WEBPACK_IMPORTED_MODULE_3__","routes_unauthenticated__WEBPACK_IMPORTED_MODULE_4__","pages_NotFound__WEBPACK_IMPORTED_MODULE_5__","utils_env_helper__WEBPACK_IMPORTED_MODULE_6__","context_user_context__WEBPACK_IMPORTED_MODULE_7__","Routes","isBeta","useUser","a","createElement","basename","env","routesAuthenticated","filter","route","id","beta","map","key","path","component","exact","to","routesUnauthenticated","default","AuthenticatedApp"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,IAaA,SAASa,IAAS,IACRC,EAAWC,cAAXD,OACR,OACEV,EAAAY,EAAAC,cAACX,EAAA,cAAD,CAAQY,SAAUC,YAAI,uBACpBf,EAAAY,EAAAC,cAACV,EAAA,EAAD,KACGa,IACEC,OACC,SAAAC,GAAK,MACU,gBAAbA,EAAMC,OAA0BT,IAAUQ,EAAME,QAEnDC,IAAI,SAAAH,GACH,OACElB,EAAAY,EAAAC,cAACV,EAAA,EAAD,CACEmB,IAAKJ,EAAMC,GACXI,KAAML,EAAMK,KACZC,UAAWN,EAAMM,UACjBC,QAAOP,EAAMO,OAAQP,EAAMO,UAInCzB,EAAAY,EAAAC,cAACV,EAAA,EAAD,CAAUuB,GAAG,WACVC,IAAsBN,IAAI,SAACH,EAAOI,GACjC,OACEtB,EAAAY,EAAAC,cAACV,EAAA,EAAD,CAAOmB,IAAKA,EAAKC,KAAML,EAAMK,KAAMC,UAAWN,EAAMM,eAI1DxB,EAAAY,EAAAC,cAACP,EAAA,EAAD,CAAUsB,SAAO,MAUVC,UAJf,WACE,OAAO7B,EAAAY,EAAAC,cAACJ,EAAD","file":"static/js/6.06925742.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport routesAuthenticated from 'routes/authenticated';\nimport routesUnauthenticated from 'routes/unauthenticated';\nimport NotFound from 'pages/NotFound';\nimport { env } from 'utils/env-helper';\nimport { useUser } from 'context/user-context';\n\nfunction Routes() {\n  const { isBeta } = useUser();\n  return (\n    <Router basename={env('REACT_APP_BASENAME')}>\n      <Switch>\n        {routesAuthenticated\n          .filter(\n            route =>\n              route.id !== 'deconnexion' && (!isBeta ? !route.beta : true)\n          )\n          .map(route => {\n            return (\n              <Route\n                key={route.id}\n                path={route.path}\n                component={route.component}\n                exact={route.exact ? route.exact : false}\n              />\n            );\n          })}\n        <Redirect to=\"/depots\">\n          {routesUnauthenticated.map((route, key) => {\n            return (\n              <Route key={key} path={route.path} component={route.component} />\n            );\n          })}\n        </Redirect>\n        <NotFound default />\n      </Switch>\n    </Router>\n  );\n}\n\nfunction AuthenticatedApp() {\n  return <Routes />;\n}\n\nexport default AuthenticatedApp;\n"],"sourceRoot":""}