{"version":3,"sources":["api/axios-keycloak.js","api/api-real.js"],"names":["AxiosKeycloak","config","instance","axios","create","interceptors","request","use","Promise","resolve","reject","updateToken","success","headers","Authorization","token","error","login","response","data","cause","Keycloak","keycloak","url","env","realm","clientId","apiHttpClient","createAxiosInstance","baseURL","responseType","responseEncoding","withCredentials","profils","userProfils","hisProfiles","forEach","profil","hasRealmRole","push","addProfil","api","auth","init","onLoad","authenticated","Error","isAuthenticated","logout","getUser","loadUserInfo","userInfo","prenom","given_name","nom","family_name","email","isDeposant","isMairie","isInstructeur","isBeta","dossiers","listerDossiers","get","then","res","consulterDossier","id","ajouterDossier","formData","post","catch","console","log","JSON","stringify","supprimerDossier","delete","savePieceJointe","dossierId","numero","saveMessage","contenu","lireFichier","fichierId","content_disposition","content_type","matches","exec","URL","createObjectURL","Blob","type","extractFileInfo","qualifierDossier","declarerIncompletDossier","message","declarerCompletDossier","prendreDecision"],"mappings":"4LAGqBA,E,4LACCC,GAAS,IAAD,OACpBC,EAAWC,IAAMC,OAAOH,GAkC9B,OAhCAC,EAASG,aAAaC,QAAQC,KAC5B,SAAAN,GAAM,OACJ,IAAIO,SAAQ,SAACC,EAASC,GAAV,OACV,EAAKC,YAAY,GACdC,SAAQ,WACPX,EAAOY,QAAQC,cAAgB,UAAY,EAAKC,MAChDN,EAAQR,MAETe,OAAM,WACL,EAAKC,iBAIff,EAASG,aAAaa,SAASX,KAC7B,SAASW,GACP,OAAOA,KAET,SAASF,GACP,OAAIA,EAAME,SACJF,EAAME,SAASC,KAAKC,MACfZ,QAAQE,OAAOM,EAAME,SAASC,KAAKC,OAEnCZ,QAAQE,OAAOM,EAAME,SAASC,MAE9BH,EAAMV,QACRE,QAAQE,OAAOM,EAAMV,SAErBE,QAAQE,OAAOM,MAKrBd,K,6BAIP,OAAOC,Q,UAxCgCkB,G,SCErCC,EAAW,IAAItB,EAAc,CACjCuB,IAAKC,YAAI,yBACTC,MAAOD,YAAI,2BACXE,SAAUF,YAAI,iCAGVG,EAAgBL,EAASM,oBAAoB,CACjDC,QAASL,YAAI,qBACbM,aAAc,OACdC,iBAAkB,OAClBlB,QAAS,CAAE,eAAgB,kCAC3BmB,iBAAiB,IAGbC,EAAU,CAAC,WAAY,OAAQ,cAAe,UAoEpD,SAASC,EAAYZ,GACnB,IAAIa,EAAc,GAElB,OADAF,EAAQG,SAAQ,SAAAC,GAAM,OANxB,SAAmBf,EAAUW,EAASI,GAChCf,EAASgB,aAAaD,IAASJ,EAAQM,KAAKF,GAKtBG,CAAUlB,EAAUa,EAAaE,MACpDF,EAsPT,IAwBMM,EAAM,CACVC,KAzBW,CACXzB,MA5TF,WACE,OAAO,IAAIT,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,mBACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EAAQoC,MAEhB7B,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WAqT9B+B,gBAnSF,WACE,OAAO,IAAIvC,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EAAQoC,MAEhB7B,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WA4R9BgC,OAjTF,WACE,OAAO,IAAIxC,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJ0B,SACApC,SAAQ,SAAAiC,GACP,OAAOpC,EAAQoC,MAEhB7B,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WA0S9BiC,QAvPF,WACE,OAAO,IAAIzC,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJ4B,eACAtC,SAAQ,SAAAuC,GACP,OAAO1C,EAAQ,CACb2C,OAAQD,EAASE,WACjBC,IAAKH,EAASI,YACdtB,QAASC,EAAYZ,GACrBkC,MAAOL,EAASK,WAGnBxC,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WA2O9ByC,WAzRF,WACE,OAAO,IAAIjD,SAAQ,SAACC,EAASC,GAC3B,OAAOD,EAAQa,EAASgB,aAAa,iBAwRvCoB,SArRF,WACE,OAAO,IAAIlD,SAAQ,SAACC,EAASC,GAC3B,OAAOD,EAAQa,EAASgB,aAAa,eAoRvCqB,cAhRF,WACE,OAAO,IAAInD,SAAQ,SAACC,EAASC,GAC3B,OAAOD,EAAQa,EAASgB,aAAa,oBA+QvCsB,OA3QF,WACE,OAAO,IAAIpD,SAAQ,SAACC,EAASC,GAC3B,OAAOD,EAAQa,EAASgB,aAAa,cA2RvCuB,SAhBe,CACfC,eA5OF,WACE,OAAO,IAAItD,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EAAQkB,EAAcoC,IAAd,aAA+BC,MAAK,SAAAC,GAAG,OAAIA,EAAI9C,YAE/DH,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WAqO9BkD,iBAhOF,SAA0BC,GACxB,OAAO,IAAI3D,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EACLkB,EAAcoC,IAAd,oBAA+BI,IAAMH,MAAK,SAAAC,GAAG,OAAIA,EAAI9C,YAGxDH,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WAuN9BoD,eAxHF,SAAwBC,GACtB,OAAO,IAAI7D,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACPlB,EACG2C,KADH,YACqBD,EAAU,CAC3BxD,QAAS,CACP,eACE,yDAGLmD,MAAK,SAAS9C,GACb,OAAOT,EAAQS,MAEhBqD,OAAM,SAASvD,GAEd,OADAwD,QAAQC,IAAI,SAAUC,KAAKC,UAAU3D,IAC9BN,EAAOM,SAGnBA,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WAoG9B4D,iBAnNF,SAA0BT,GACxB,OAAO,IAAI3D,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EACLkB,EAAckD,OAAd,oBAAkCV,IAAMH,MAAK,SAAAC,GAAG,OAAIA,EAAI9C,YAG3DH,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WA0M9B8D,gBAhGF,SAAyBC,EAAWC,EAAQX,GAC1C,OAAO,IAAI7D,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EACLkB,EACG2C,KADH,oBACqBS,EADrB,0BACgDC,GAAUX,EAAU,CAChExD,QAAS,CACP,eACE,yDAGL0D,OAAM,SAASvD,GAEd,OADAwD,QAAQC,IAAI,SAAUC,KAAKC,UAAU3D,IAC9BN,EAAOM,UAIrBA,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WA6E9BiE,YAxEF,SAAqBF,EAAWG,GAC9B,OAAO,IAAI1E,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EACLkB,EACG2C,KADH,oBACqBS,EADrB,aAC2CG,GACxCX,OAAM,SAASvD,GAEd,OADAwD,QAAQC,IAAI,SAAUC,KAAKC,UAAU3D,IAC9BN,EAAOM,UAIrBA,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WA0D9BmE,YAtCF,SAAqBC,GACnB,OAAO,IAAI5E,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EACLkB,EACGoC,IADH,oBACoBqB,GAAa,CAAEtD,aAAc,SAC9CkC,MAAK,SAAA9C,GAAQ,OAvB1B,SAAyBA,GACvB,IACImE,EAAsBnE,EAASL,QAAQ,uBACvCyE,EAAepE,EAASL,QAAQ,gBAChC0E,EAHiB,wFAGQC,KAAKH,GAQlC,MAPe,CACblE,KAAMsE,IAAIC,gBACR,IAAIC,KAAK,CAACzE,EAASC,MAAO,CAAEyE,KAAMN,KAEpChC,IAAKiC,EAAQ,GACbK,KAAMN,GAaoBO,CAAgB3E,MACjCqD,OAAM,SAASvD,GAEd,OADAwD,QAAQC,IAAI,SAAUC,KAAKC,UAAU3D,IAC9BN,EAAOM,UAIrBA,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WAuB9B8E,iBAxMF,SAA0B3B,GACxB,OAAO,IAAI3D,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EACLkB,EAAc2C,KAAd,oBAAgCH,EAAhC,eAAgDH,MAAK,SAAAC,GAAG,OAAIA,EAAI9C,YAGnEH,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WA+L9B+E,yBA1LF,SAAkC5B,EAAI6B,GACpC,OAAO,IAAIxF,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EACLkB,EACG2C,KADH,oBACqBH,EADrB,uBAC8C6B,GAC3ChC,MAAK,SAAAC,GAAG,OAAIA,EAAI9C,YAGtBH,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WA+K9BiF,uBA1KF,SAAgC9B,GAC9B,OAAO,IAAI3D,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACP,OAAOpC,EACLkB,EACG2C,KADH,oBACqBH,EADrB,sBAEGH,MAAK,SAAAC,GAAG,OAAIA,EAAI9C,YAGtBH,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,WA+J9BkF,gBA1JF,SAAyB/B,EAAIE,GAC3B,OAAO,IAAI7D,SAAQ,SAACC,EAASC,GAC3B,OAAOY,EACJqB,KAAK,CAAEC,OAAQ,cACfhC,SAAQ,SAAAiC,GACPlB,EACG2C,KADH,oBACqBH,EADrB,qBAC4CE,EAAU,CAClDxD,QAAS,CACP,eACE,yDAGLmD,MAAK,SAAS9C,GACb,OAAOT,EAAQS,MAEhBqD,OAAM,SAASvD,GAEd,OADAwD,QAAQC,IAAI,SAAUC,KAAKC,UAAU3D,IAC9BN,EAAOM,SAGnBA,OAAM,SAAAA,GACL,OAAON,EAAO,IAAIoC,MAAM9B,aA6IjByB","file":"static/js/6.d7914d77.chunk.js","sourcesContent":["import axios from 'axios';\nimport Keycloak from 'keycloak-js';\n\nexport default class AxiosKeycloak extends Keycloak {\n  createAxiosInstance(config) {\n    const instance = axios.create(config);\n\n    instance.interceptors.request.use(\n      config =>\n        new Promise((resolve, reject) =>\n          this.updateToken(5)\n            .success(() => {\n              config.headers.Authorization = 'Bearer ' + this.token;\n              resolve(config);\n            })\n            .error(() => {\n              this.login();\n            })\n        )\n    );\n    instance.interceptors.response.use(\n      function(response) {\n        return response;\n      },\n      function(error) {\n        if (error.response) {\n          if (error.response.data.cause) {\n            return Promise.reject(error.response.data.cause);\n          } else {\n            return Promise.reject(error.response.data);\n          }\n        } else if (error.request) {\n          return Promise.reject(error.request);\n        } else {\n          return Promise.reject(error);\n        }\n      }\n    );\n\n    return instance;\n  }\n\n  static get axios() {\n    return axios;\n  }\n}\n","import AxiosKeycloak from 'api/axios-keycloak';\nimport { env } from 'config/env-helper';\n\n// API rÃ©elle\n\nconst keycloak = new AxiosKeycloak({\n  url: env('REACT_APP_SSO_APP_URL'),\n  realm: env('REACT_APP_SSO_APP_REALM'),\n  clientId: env('REACT_APP_SSO_APP_CLIENT_ID')\n});\n\nconst apiHttpClient = keycloak.createAxiosInstance({\n  baseURL: env('REACT_APP_API_URL'),\n  responseType: 'json',\n  responseEncoding: 'utf8',\n  headers: { 'Content-Type': 'application/json;charset=UTF-8' },\n  withCredentials: true\n});\n\nconst profils = ['DEPOSANT', 'BETA', 'INSTRUCTEUR', 'MAIRIE'];\n\nfunction login() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'login-required' })\n      .success(authenticated => {\n        return resolve(authenticated);\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction logout() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .logout()\n      .success(authenticated => {\n        return resolve(authenticated);\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction isAuthenticated() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(authenticated);\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction isDeposant() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('DEPOSANT'));\n  });\n}\nfunction isMairie() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('MAIRIE'));\n  });\n}\n\nfunction isInstructeur() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('INSTRUCTEUR'));\n  });\n}\n\nfunction isBeta() {\n  return new Promise((resolve, reject) => {\n    return resolve(keycloak.hasRealmRole('BETA'));\n  });\n}\n\nfunction addProfil(keycloak, profils, profil) {\n  if (keycloak.hasRealmRole(profil)) profils.push(profil);\n}\n\nfunction userProfils(keycloak) {\n  let hisProfiles = [];\n  profils.forEach(profil => addProfil(keycloak, hisProfiles, profil));\n  return hisProfiles;\n}\n\nfunction getUser() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .loadUserInfo()\n      .success(userInfo => {\n        return resolve({\n          prenom: userInfo.given_name,\n          nom: userInfo.family_name,\n          profils: userProfils(keycloak),\n          email: userInfo.email\n        });\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction listerDossiers() {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(apiHttpClient.get(`/dossiers`).then(res => res.data));\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction consulterDossier(id) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient.get(`/dossiers/${id}`).then(res => res.data)\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction supprimerDossier(id) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient.delete(`/dossiers/${id}`).then(res => res.data)\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction qualifierDossier(id) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient.post(`/dossiers/${id}/qualifier`).then(res => res.data)\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction declarerIncompletDossier(id, message) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient\n            .post(`/dossiers/${id}/declarer-incomplet`, message)\n            .then(res => res.data)\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction declarerCompletDossier(id) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient\n            .post(`/dossiers/${id}/declarer-complet`)\n            .then(res => res.data)\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction prendreDecision(id, formData) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        apiHttpClient\n          .post(`/dossiers/${id}/prendre-decision`, formData, {\n            headers: {\n              'content-type':\n                'multipart/form-data;boundary=gc0p4Jq0M2Yt08jU534c0p'\n            }\n          })\n          .then(function(response) {\n            return resolve(response);\n          })\n          .catch(function(error) {\n            console.log('error=', JSON.stringify(error));\n            return reject(error);\n          });\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction ajouterDossier(formData) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        apiHttpClient\n          .post(`/dossiers`, formData, {\n            headers: {\n              'content-type':\n                'multipart/form-data;boundary=gc0p4Jq0M2Yt08jU534c0p'\n            }\n          })\n          .then(function(response) {\n            return resolve(response);\n          })\n          .catch(function(error) {\n            console.log('error=', JSON.stringify(error));\n            return reject(error);\n          });\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction savePieceJointe(dossierId, numero, formData) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient\n            .post(`/dossiers/${dossierId}/piecesjointes/${numero}`, formData, {\n              headers: {\n                'content-type':\n                  'multipart/form-data;boundary=gc0p4Jq0M2Yt08jU534c0p'\n              }\n            })\n            .catch(function(error) {\n              console.log('error=', JSON.stringify(error));\n              return reject(error);\n            })\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction saveMessage(dossierId, contenu) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient\n            .post(`/dossiers/${dossierId}/messages`, contenu)\n            .catch(function(error) {\n              console.log('error=', JSON.stringify(error));\n              return reject(error);\n            })\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nfunction extractFileInfo(response) {\n  let regex_filename = /^attachment;filename=([\\w- Ã©Ã¨Ã«Ã Ã¹â¬ÃªÃ´Ã¯Ã®]+[.]{1}[\\w]+)$/i;\n  let content_disposition = response.headers['content-disposition'];\n  let content_type = response.headers['content-type'];\n  let matches = regex_filename.exec(content_disposition);\n  let fileInfo = {\n    data: URL.createObjectURL(\n      new Blob([response.data], { type: content_type })\n    ),\n    nom: matches[1],\n    type: content_type\n  };\n  return fileInfo;\n}\n\nfunction lireFichier(fichierId) {\n  return new Promise((resolve, reject) => {\n    return keycloak\n      .init({ onLoad: 'check-sso' })\n      .success(authenticated => {\n        return resolve(\n          apiHttpClient\n            .get(`/fichiers/${fichierId}`, { responseType: 'blob' })\n            .then(response => extractFileInfo(response))\n            .catch(function(error) {\n              console.log('error=', JSON.stringify(error));\n              return reject(error);\n            })\n        );\n      })\n      .error(error => {\n        return reject(new Error(error));\n      });\n  });\n}\n\nconst auth = {\n  login,\n  isAuthenticated,\n  logout,\n  getUser,\n  isDeposant,\n  isMairie,\n  isInstructeur,\n  isBeta\n};\nconst dossiers = {\n  listerDossiers,\n  consulterDossier,\n  ajouterDossier,\n  supprimerDossier,\n  savePieceJointe,\n  saveMessage,\n  lireFichier,\n  qualifierDossier,\n  declarerIncompletDossier,\n  declarerCompletDossier,\n  prendreDecision\n};\n\nconst api = {\n  auth,\n  dossiers\n};\n\nexport default api;\n"],"sourceRoot":""}