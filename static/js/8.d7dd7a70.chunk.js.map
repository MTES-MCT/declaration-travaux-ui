{"version":3,"sources":["utils/users-mock.js","utils/api-mock.js"],"names":["users","id","email","firstName","lastName","profil","principal","waitingTime","depotsFixtures","type","date","etat","api","auth","login","Promise","resolve","reject","setTimeout","find","user","Error","isAuthenticated","logout","getUser","isDepositaire","isInstructeur","depots","mesDepots","page","totalCount","monDepot","depot","savePieceJointe","code","file","binary","sessionStorage","setItem","JSON","stringify","nom","name","size","data","loadPieceJointe","parse","getItem"],"mappings":"iGAAA,IAiBeA,EAjBD,CACZ,CACEC,GAAI,cACJC,MAAO,wBACPC,UAAW,OACXC,SAAU,SACVC,OAAQ,eAEV,CACEJ,GAAI,iBACJC,MAAO,2BACPC,UAAW,UACXC,SAAU,SACVC,OAAQ,gBCTRC,EAAY,KAEVC,EAAc,IAqDpB,IAAIC,EAAiB,CACnB,CACEP,GAAI,IACJQ,KAAM,KACNC,KAAM,aACNC,KAAM,eAER,CACEV,GAAI,IACJQ,KAAM,OACNC,KAAM,aACNC,KAAM,cAkDV,IAeMC,EAAM,CACVC,KAhBW,CACXC,MAjHF,SAAeb,GACb,OAAO,IAAIc,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAKjB,EAEEe,EAASV,EAAYN,EAAMmB,KAAK,SAAAC,GAAI,OAAIA,EAAKnB,KAAOA,KADlDgB,EAAO,IAAII,MAAM,4CAEzBd,MA4GLe,gBAhGF,WACE,OAAO,IAAIP,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAsB,OAAdV,IACdC,MA6FLgB,OAzGF,WACE,OAAO,IAAIR,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACTF,EAASV,EAAY,OACpBC,MAsGLiB,QA1EF,WACE,OAAO,IAAIT,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAKZ,EACEU,EAAQV,GADQW,EAAO,IAAII,MAAM,mCAEvCd,MAsELkB,cA3FF,WACE,OAAO,IAAIV,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAyB,gBAAjBV,EAAUL,KACxBM,MAwFLmB,cApFF,WACE,OAAO,IAAIX,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAyB,mBAAjBV,EAAUL,KACxBM,OA2FLoB,OATa,CACbC,UAvDF,WACE,OAAO,IAAIb,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQ,CACbW,OAAQnB,EACRqB,KAAM,EACNC,WAAY,KAEbvB,MAgDLwB,SA5CF,SAAkB9B,GAChB,OAAO,IAAIc,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQR,EAAeW,KAAK,SAAAa,GAAK,OAAIA,EAAM/B,KAAOA,MACxDM,MAyCL0B,gBArCF,SAAyBC,EAAMC,EAAMC,GACnC,OAAO,IAAIrB,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EACLqB,eAAeC,QACbJ,EACAK,KAAKC,UAAU,CACbC,IAAKN,EAAKO,KACVjC,KAAM0B,EAAK1B,KACXkC,KAAMR,EAAKQ,KACXC,KAAMR,OAIX7B,MAwBLsC,gBApBF,SAAyBX,GACvB,OAAO,IAAInB,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQuB,KAAKO,MAAMT,eAAeU,QAAQb,MAChD3B,QAwBQK","file":"static/js/8.d7dd7a70.chunk.js","sourcesContent":["const users = [\n  {\n    id: 'jean.martin',\n    email: 'jean.martin@monfai.fr',\n    firstName: 'Jean',\n    lastName: 'Martin',\n    profil: 'depositaire'\n  },\n  {\n    id: 'jacques.dupont',\n    email: 'jacques.dupont@monfai.fr',\n    firstName: 'Jacques',\n    lastName: 'Dupont',\n    profil: 'instructeur'\n  }\n];\n\nexport default users;\n","import users from './users-mock';\n\n// API de test uniquement\n\nlet principal = null;\n\nconst waitingTime = 100;\n\nfunction login(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (!id)\n        return reject(new Error('Connexion impossible. User id inconnu.'));\n      return resolve((principal = users.find(user => user.id === id)));\n    }, waitingTime);\n  });\n}\n\nfunction logout() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve((principal = null));\n    }, waitingTime);\n  });\n}\n\nfunction isAuthenticated() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(principal !== null);\n    }, waitingTime);\n  });\n}\n\nfunction isDepositaire() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(principal.id === 'jean.martin');\n    }, waitingTime);\n  });\n}\n\nfunction isInstructeur() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(principal.id === 'jacques.dupont');\n    }, waitingTime);\n  });\n}\n\nfunction getUser() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (!principal) return reject(new Error(\"Pas d'utilisateur connectÃ©\"));\n      return resolve(principal);\n    }, waitingTime);\n  });\n}\n\nlet depotsFixtures = [\n  {\n    id: '0',\n    type: 'dp',\n    date: '01/01/2019',\n    etat: 'instruction'\n  },\n  {\n    id: '1',\n    type: 'pcmi',\n    date: '01/07/2019',\n    etat: 'incomplet'\n  }\n];\n\nfunction mesDepots() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve({\n        depots: depotsFixtures,\n        page: 0,\n        totalCount: 1\n      });\n    }, waitingTime);\n  });\n}\n\nfunction monDepot(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(depotsFixtures.find(depot => depot.id === id));\n    }, waitingTime);\n  });\n}\n\nfunction savePieceJointe(code, file, binary) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(\n        sessionStorage.setItem(\n          code,\n          JSON.stringify({\n            nom: file.name,\n            type: file.type,\n            size: file.size,\n            data: binary\n          })\n        )\n      );\n    }, waitingTime);\n  });\n}\n\nfunction loadPieceJointe(code) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(JSON.parse(sessionStorage.getItem(code)));\n    }, waitingTime);\n  });\n}\n\nconst auth = {\n  login,\n  isAuthenticated,\n  logout,\n  getUser,\n  isDepositaire,\n  isInstructeur\n};\nconst depots = {\n  mesDepots,\n  monDepot,\n  savePieceJointe,\n  loadPieceJointe\n};\n\nconst api = {\n  auth,\n  depots\n};\n\nexport default api;\n"],"sourceRoot":""}