{"version":3,"sources":["authenticated-app.js"],"names":["Routes","isBeta","useUser","basename","env","routesAuthenticated","filter","route","id","beta","map","key","path","component","exact","to","routesUnauthenticated","default","AuthenticatedApp"],"mappings":"gHAAA,uFAaA,SAASA,IAAU,IACTC,EAAWC,cAAXD,OACR,OACE,kBAAC,gBAAD,CAAQE,SAAUC,YAAI,uBACpB,kBAAC,IAAD,KACGC,IACEC,OACC,SAAAC,GAAK,MACU,gBAAbA,EAAMC,OAA0BP,IAAUM,EAAME,QAEnDC,IAAI,SAAAH,GACH,OACE,kBAAC,IAAD,CACEI,IAAKJ,EAAMC,GACXI,KAAML,EAAMK,KACZC,UAAWN,EAAMM,UACjBC,QAAOP,EAAMO,OAAQP,EAAMO,UAInC,kBAAC,IAAD,CAAUC,GAAG,WACVC,IAAsBN,IAAI,SAACH,EAAOI,GACjC,OACE,kBAAC,IAAD,CAAOA,IAAKA,EAAKC,KAAML,EAAMK,KAAMC,UAAWN,EAAMM,eAI1D,kBAAC,IAAD,CAAUI,SAAO,MAUVC,UAJf,WACE,OAAO,kBAAClB,EAAD","file":"static/js/6.ef958a4b.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport routesAuthenticated from 'routes/authenticated';\nimport routesUnauthenticated from 'routes/unauthenticated';\nimport NotFound from 'pages/NotFound';\nimport { env } from 'utils/env-helper';\nimport { useUser } from 'context/user-context';\n\nfunction Routes() {\n  const { isBeta } = useUser();\n  return (\n    <Router basename={env('REACT_APP_BASENAME')}>\n      <Switch>\n        {routesAuthenticated\n          .filter(\n            route =>\n              route.id !== 'deconnexion' && (!isBeta ? !route.beta : true)\n          )\n          .map(route => {\n            return (\n              <Route\n                key={route.id}\n                path={route.path}\n                component={route.component}\n                exact={route.exact ? route.exact : false}\n              />\n            );\n          })}\n        <Redirect to=\"/depots\">\n          {routesUnauthenticated.map((route, key) => {\n            return (\n              <Route key={key} path={route.path} component={route.component} />\n            );\n          })}\n        </Redirect>\n        <NotFound default />\n      </Switch>\n    </Router>\n  );\n}\n\nfunction AuthenticatedApp() {\n  return <Routes />;\n}\n\nexport default AuthenticatedApp;\n"],"sourceRoot":""}