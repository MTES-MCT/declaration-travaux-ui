{"version":3,"sources":["authenticated-app.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_beam_australia_react_env__WEBPACK_IMPORTED_MODULE_1__","_beam_australia_react_env__WEBPACK_IMPORTED_MODULE_1___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","routes_authenticated__WEBPACK_IMPORTED_MODULE_4__","routes_unauthenticated__WEBPACK_IMPORTED_MODULE_5__","pages_NotFound__WEBPACK_IMPORTED_MODULE_6__","Routes","a","createElement","basename","env","routesAuthenticated","filter","route","id","map","key","path","component","exact","to","routesUnauthenticated","default","AuthenticatedApp"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAYA,SAASa,IACP,OACET,EAAAU,EAAAC,cAACP,EAAA,cAAD,CAAQQ,SAAUC,IAAI,aACpBb,EAAAU,EAAAC,cAACN,EAAA,EAAD,KACGS,IACEC,OAAO,SAAAC,GAAK,MAAiB,gBAAbA,EAAMC,KACtBC,IAAI,SAAAF,GACH,OACEhB,EAAAU,EAAAC,cAACN,EAAA,EAAD,CACEc,IAAKH,EAAMC,GACXG,KAAMJ,EAAMI,KACZC,UAAWL,EAAMK,UACjBC,QAAON,EAAMM,OAAQN,EAAMM,UAInCtB,EAAAU,EAAAC,cAACN,EAAA,EAAD,CAAUkB,GAAG,WACVC,IAAsBN,IAAI,SAACF,EAAOG,GACjC,OACEnB,EAAAU,EAAAC,cAACN,EAAA,EAAD,CAAOc,IAAKA,EAAKC,KAAMJ,EAAMI,KAAMC,UAAWL,EAAMK,eAI1DrB,EAAAU,EAAAC,cAACH,EAAA,EAAD,CAAUiB,SAAO,MAUVC,UAJf,WACE,OAAO1B,EAAAU,EAAAC,cAACF,EAAD","file":"static/js/6.a96b4a1b.chunk.js","sourcesContent":["import React from 'react';\nimport env from '@beam-australia/react-env';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport routesAuthenticated from 'routes/authenticated';\nimport routesUnauthenticated from 'routes/unauthenticated';\nimport NotFound from 'pages/NotFound';\n\nfunction Routes() {\n  return (\n    <Router basename={env('BASENAME')}>\n      <Switch>\n        {routesAuthenticated\n          .filter(route => route.id !== 'deconnexion')\n          .map(route => {\n            return (\n              <Route\n                key={route.id}\n                path={route.path}\n                component={route.component}\n                exact={route.exact ? route.exact : false}\n              />\n            );\n          })}\n        <Redirect to=\"/depots\">\n          {routesUnauthenticated.map((route, key) => {\n            return (\n              <Route key={key} path={route.path} component={route.component} />\n            );\n          })}\n        </Redirect>\n        <NotFound default />\n      </Switch>\n    </Router>\n  );\n}\n\nfunction AuthenticatedApp() {\n  return <Routes />;\n}\n\nexport default AuthenticatedApp;\n"],"sourceRoot":""}