{"version":3,"sources":["utils/users-mock.js","utils/api-mock.js"],"names":["users","id","email","firstName","lastName","profils","principal","waitingTime","depotsFixtures","type","date","etat","userId","api","auth","login","Promise","resolve","reject","setTimeout","find","user","Error","isAuthenticated","logout","getUser","isDepositaire","includes","isInstructeur","isBeta","depots","mesDepots","page","totalCount","monDepot","depot","ajouterDepot","push","length","toString","Date","toLocaleDateString","savePieceJointe","code","file","binary","sessionStorage","setItem","JSON","stringify","nom","name","size","data","loadPieceJointe","parse","getItem"],"mappings":"iGAAA,IAiBeA,EAjBD,CACZ,CACEC,GAAI,cACJC,MAAO,wBACPC,UAAW,OACXC,SAAU,SACVC,QAAS,CAAC,cAAe,SAE3B,CACEJ,GAAI,iBACJC,MAAO,2BACPC,UAAW,UACXC,SAAU,SACVC,QAAS,CAAC,iBCTVC,EAAY,KAEVC,EAAc,IA6DpB,IAAIC,EAAiB,CACnB,CACEP,GAAI,IACJQ,KAAM,KACNC,KAAM,aACNC,KAAM,cACNC,OAAQ,eAEV,CACEX,GAAI,IACJQ,KAAM,OACNC,KAAM,aACNC,KAAM,YACNC,OAAQ,gBAiEZ,IAiBMC,EAAM,CACVC,KAlBW,CACXC,MA1IF,SAAed,GACb,OAAO,IAAIe,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAKlB,EAEEgB,EAASX,EAAYN,EAAMoB,KAAK,SAAAC,GAAI,OAAIA,EAAKpB,KAAOA,KADlDiB,EAAO,IAAII,MAAM,4CAEzBf,MAqILgB,gBAzHF,WACE,OAAO,IAAIP,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAsB,OAAdX,IACdC,MAsHLiB,OAlIF,WACE,OAAO,IAAIR,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACTF,EAASX,EAAY,OACpBC,MA+HLkB,QA3FF,WACE,OAAO,IAAIT,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAKb,EACEW,EAAQX,GADQY,EAAO,IAAII,MAAM,mCAEvCf,MAuFLmB,cApHF,WACE,OAAO,IAAIV,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQX,EAAUD,QAAQsB,SAAS,iBACzCpB,MAiHLqB,cA7GF,WACE,OAAO,IAAIZ,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQX,EAAUD,QAAQsB,SAAS,iBACzCpB,MA0GLsB,OAtGF,WACE,OAAO,IAAIb,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQX,EAAUD,QAAQsB,SAAS,UACzCpB,OA8GLuB,OAVa,CACbC,UAvEF,WACE,OAAO,IAAIf,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQ,CACba,OAAQtB,EACRwB,KAAM,EACNC,WAAY,KAEb1B,MAgEL2B,SA5DF,SAAkBjC,GAChB,OAAO,IAAIe,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQT,EAAeY,KAAK,SAAAe,GAAK,OAAIA,EAAMlC,KAAOA,MACxDM,MAyDL6B,aArDF,WACE,OAAO,IAAIpB,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EACLT,EAAe6B,KAAK,CAClBpC,GAAIO,EAAe8B,OAAOC,WAC1B9B,KAAM,OACNC,MAAM,IAAI8B,MAAOC,qBACjB9B,KAAM,kBAGTJ,MA2CLmC,gBAvCF,SAAyBC,EAAMC,EAAMC,GACnC,OAAO,IAAI7B,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EACL6B,eAAeC,QACbJ,EACAK,KAAKC,UAAU,CACbC,IAAKN,EAAKO,KACV1C,KAAMmC,EAAKnC,KACX2C,KAAMR,EAAKQ,KACXC,KAAMR,OAIXtC,MA0BL+C,gBAtBF,SAAyBX,GACvB,OAAO,IAAI3B,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACT,OAAOF,EAAQ+B,KAAKO,MAAMT,eAAeU,QAAQb,MAChDpC,QA0BQM","file":"static/js/8.dff3e0d8.chunk.js","sourcesContent":["const users = [\n  {\n    id: 'jean.martin',\n    email: 'jean.martin@monfai.fr',\n    firstName: 'Jean',\n    lastName: 'Martin',\n    profils: ['depositaire', 'beta']\n  },\n  {\n    id: 'jacques.dupont',\n    email: 'jacques.dupont@monfai.fr',\n    firstName: 'Jacques',\n    lastName: 'Dupont',\n    profils: ['instructeur']\n  }\n];\n\nexport default users;\n","import users from './users-mock';\n\n// API de test uniquement\n\nlet principal = null;\n\nconst waitingTime = 100;\n\nfunction login(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (!id)\n        return reject(new Error('Connexion impossible. User id inconnu.'));\n      return resolve((principal = users.find(user => user.id === id)));\n    }, waitingTime);\n  });\n}\n\nfunction logout() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve((principal = null));\n    }, waitingTime);\n  });\n}\n\nfunction isAuthenticated() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(principal !== null);\n    }, waitingTime);\n  });\n}\n\nfunction isDepositaire() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(principal.profils.includes('depositaire'));\n    }, waitingTime);\n  });\n}\n\nfunction isInstructeur() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(principal.profils.includes('instructeur'));\n    }, waitingTime);\n  });\n}\n\nfunction isBeta() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(principal.profils.includes('beta'));\n    }, waitingTime);\n  });\n}\n\nfunction getUser() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (!principal) return reject(new Error(\"Pas d'utilisateur connectÃ©\"));\n      return resolve(principal);\n    }, waitingTime);\n  });\n}\n\nlet depotsFixtures = [\n  {\n    id: '0',\n    type: 'dp',\n    date: '01/01/2019',\n    etat: 'instruction',\n    userId: 'jean.martin'\n  },\n  {\n    id: '1',\n    type: 'pcmi',\n    date: '01/07/2019',\n    etat: 'incomplet',\n    userId: 'jean.martin'\n  }\n];\n\nfunction mesDepots() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve({\n        depots: depotsFixtures,\n        page: 0,\n        totalCount: 1\n      });\n    }, waitingTime);\n  });\n}\n\nfunction monDepot(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(depotsFixtures.find(depot => depot.id === id));\n    }, waitingTime);\n  });\n}\n\nfunction ajouterDepot() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(\n        depotsFixtures.push({\n          id: depotsFixtures.length.toString(),\n          type: 'pcmi',\n          date: new Date().toLocaleDateString(),\n          etat: 'instruction'\n        })\n      );\n    }, waitingTime);\n  });\n}\n\nfunction savePieceJointe(code, file, binary) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(\n        sessionStorage.setItem(\n          code,\n          JSON.stringify({\n            nom: file.name,\n            type: file.type,\n            size: file.size,\n            data: binary\n          })\n        )\n      );\n    }, waitingTime);\n  });\n}\n\nfunction loadPieceJointe(code) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve(JSON.parse(sessionStorage.getItem(code)));\n    }, waitingTime);\n  });\n}\n\nconst auth = {\n  login,\n  isAuthenticated,\n  logout,\n  getUser,\n  isDepositaire,\n  isInstructeur,\n  isBeta\n};\nconst depots = {\n  mesDepots,\n  monDepot,\n  ajouterDepot,\n  savePieceJointe,\n  loadPieceJointe\n};\n\nconst api = {\n  auth,\n  depots\n};\n\nexport default api;\n"],"sourceRoot":""}