{"version":3,"sources":["api/mock/users-mock.js","api/mock/statuts-mock.js","api/mock/api-mock.js"],"names":["users","id","email","prenom","nom","profils","codePostal","statuts","ordre","libelle","delai","principal","waitingTime","dossiersFixtures","now","Date","addStatut","dossier","statutId","statutActuel","find","s","dateDebut","joursRestants","push","statutsRestants","filter","statut","addMessage","contenu","messages","date","auteur","sort","m1","m2","typeFromCerfa","fileName","type","length","toUpperCase","includes","piecesAJoindre","cerfaError","file","name","saveInSessionStorage","numero","reader","FileReader","onload","binaryStr","result","sessionStorage","setItem","JSON","stringify","size","data","URL","createObjectURL","Blob","readAsBinaryString","api","auth","login","Promise","resolve","reject","setTimeout","user","Error","isAuthenticated","logout","getUser","isDeposant","isMairie","isInstructeur","isBeta","dossiers","listerDossiers","error","consulterDossier","ajouterDossier","formData","get","cerfa","fichierId","dossierId","toString","userId","piecesJointes","savePieceJointe","code","checked","checkCode","DossierId","saveMessage","lireFichier","parse","getItem","qualifierDossier","declarerIncompletDossier","declarerCompletDossier","prendreDecision","decision","supprimerDossier","index","indexOf","pieceJointe","splice","removeItem"],"mappings":"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","file":"static/js/7.1c5b56a5.chunk.js","sourcesContent":["const users = [\n  {\n    id: 'jean.martin',\n    email: 'jean.martin@monfai.fr',\n    prenom: 'Jean',\n    nom: 'Martin',\n    profils: ['DEPOSANT', 'BETA']\n  },\n  {\n    id: 'jacques.dupont',\n    email: 'jacques.dupont@monfai.fr',\n    prenom: 'Jacques',\n    nom: 'Dupont',\n    profils: ['INSTRUCTEUR']\n  },\n  {\n    id: 'madame.le-maire',\n    email: 'madame.le-maire@monfai.fr',\n    prenom: 'Madame',\n    nom: 'Le Maire',\n    profils: ['MAIRIE', 'BETA'],\n    codePostal: '44100'\n  }\n];\n\nexport default users;\n","const statuts = [\n  {\n    id: 'DEPOSE',\n    ordre: 0,\n    libelle: 'déposé',\n    delai: 7\n  },\n  {\n    id: 'QUALIFIE',\n    ordre: 1,\n    libelle: 'qualifié',\n    delai: 30\n  },\n  {\n    id: 'INCOMPLET',\n    ordre: 2,\n    libelle: 'incomplet',\n    delai: 7\n  },\n  {\n    id: 'COMPLET',\n    ordre: 3,\n    libelle: 'complet',\n    delai: 7\n  },\n  {\n    id: 'DECISION',\n    ordre: 5,\n    libelle: 'décidé',\n    delai: 7\n  }\n];\n\nexport default statuts;\n","import users from 'api/mock/users-mock';\nimport statuts from 'api/mock/statuts-mock';\n// API de test uniquement\n\nlet principal = null;\n\nconst waitingTime = 100;\n\nfunction login(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      if (!id)\n        return reject(new Error('Connexion impossible. User id inconnu.'));\n      return resolve((principal = users.find(user => user.id === id)));\n    }, waitingTime);\n  });\n}\n\nfunction logout() {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      resolve((principal = null));\n    }, waitingTime);\n  });\n}\n\nfunction isAuthenticated() {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      return resolve(principal !== null);\n    }, waitingTime);\n  });\n}\n\nfunction isDeposant() {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      return resolve(principal.profils.includes('DEPOSANT'));\n    }, waitingTime);\n  });\n}\n\nfunction isMairie() {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      return resolve(principal.profils.includes('MAIRIE'));\n    }, waitingTime);\n  });\n}\n\nfunction isInstructeur() {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      return resolve(principal.profils.includes('INSTRUCTEUR'));\n    }, waitingTime);\n  });\n}\n\nfunction isBeta() {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      return resolve(principal.profils.includes('BETA'));\n    }, waitingTime);\n  });\n}\n\nfunction getUser() {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      if (!principal) return reject(new Error(\"Pas d'utilisateur connecté\"));\n      return resolve(principal);\n    }, waitingTime);\n  });\n}\n\nlet dossiersFixtures = [];\n\nfunction listerDossiers() {\n  return new Promise((resolve, reject) => {\n    setTimeout(\n      function() {\n        return resolve(dossiersFixtures);\n      },\n      function(error) {\n        return reject(error);\n      },\n      waitingTime\n    );\n  });\n}\n\nfunction consulterDossier(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      return resolve(dossiersFixtures.find(dossier => dossier.id === id));\n    }, waitingTime);\n  });\n}\n\nfunction supprimerDossier(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      const dossier = dossiersFixtures.find(dossier => dossier.id === id);\n      const index = dossiersFixtures.indexOf(dossier);\n      dossiersFixtures.splice(index, 1);\n      sessionStorage.removeItem(dossier.type.id + '0'); // CERFA\n      for (var pieceJointe in dossier.piecesJointes) {\n        sessionStorage.removeItem(pieceJointe.fichierId);\n      }\n      return resolve();\n    }, waitingTime);\n  });\n}\n\nfunction now() {\n  return new Date();\n}\n\nfunction addStatut(dossier, statutId) {\n  dossier.statutActuel = statuts.find(s => s.id === statutId);\n  dossier.statutActuel.dateDebut = now();\n  dossier.statutActuel.joursRestants = dossier.statutActuel.delai;\n  dossier.statuts.push(dossier.statutActuel);\n  dossier.statutsRestants = statuts.filter(\n    statut =>\n      statut.ordre > dossier.statutActuel.ordre && statut.id !== 'INCOMPLET'\n  );\n}\n\nfunction qualifierDossier(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      const dossier = dossiersFixtures.find(dossier => dossier.id === id);\n      addStatut(dossier, 'QUALIFIE');\n      return resolve(dossier);\n    }, waitingTime);\n  });\n}\n\nfunction addMessage(dossier, contenu) {\n  dossier.messages.push({\n    date: now(),\n    contenu: contenu,\n    auteur: principal\n  });\n  dossier.messages.sort((m1, m2) => -(m1.date - m2.date));\n}\n\nfunction declarerIncompletDossier(id, contenu) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      const dossier = dossiersFixtures.find(dossier => dossier.id === id);\n      addStatut(dossier, 'INCOMPLET');\n      addMessage(dossier, contenu);\n      return resolve(dossier);\n    }, waitingTime);\n  });\n}\n\nfunction declarerCompletDossier(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      const dossier = dossiersFixtures.find(dossier => dossier.id === id);\n      addStatut(dossier, 'COMPLET');\n      return resolve(dossier);\n    }, waitingTime);\n  });\n}\n\nfunction prendreDecision(dossierId, formData) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      let file = formData.get('file');\n      const dossier = dossiersFixtures.find(\n        dossier => dossier.id === dossierId\n      );\n      addStatut(dossier, 'DECISION');\n      const decision = {\n        type: dossier.type,\n        numero: 'd',\n        fichierId: dossier.type.id + 'd',\n        dossierId: dossiersFixtures.length.toString()\n      };\n      dossier.decision = decision;\n      saveInSessionStorage(dossier, 'd', file);\n      return resolve(dossier);\n    }, waitingTime);\n  });\n}\n\nfunction typeFromCerfa(fileName) {\n  let type = '';\n  if (fileName && fileName.length > 0) {\n    if (fileName.toUpperCase().includes('13406_PCMI'))\n      type = {\n        id: 'PCMI',\n        libelle: 'Permis de construire de maison individuelle'\n      };\n    if (fileName.toUpperCase().includes('13703_DPMI'))\n      type = { id: 'DPMI', libelle: 'Déclaration préalable' };\n  }\n  return type;\n}\n\nfunction piecesAJoindre(type) {\n  let piecesAJoindre = [];\n  if (type.id === 'PCMI')\n    piecesAJoindre = ['1', '2', '3', '4', '5', '6', '7', '8'];\n  if (type.id === 'DPMI') piecesAJoindre = ['1'];\n  return piecesAJoindre;\n}\n\nfunction cerfaError(file) {\n  return `Fichier CERFA ${file.name} non reconnu. Seuls les fichiers nommés cerfa_13406_PCMI.pdf ou cerfa_13703_DPMI.pdf sont reconnus.`;\n}\n\nfunction saveInSessionStorage(dossier, numero, file) {\n  const reader = new FileReader();\n  reader.onload = function() {\n    const binaryStr = reader.result;\n    sessionStorage.setItem(\n      dossier.type.id + numero,\n      JSON.stringify({\n        nom: file.name,\n        type: file.type,\n        size: file.size,\n        data: URL.createObjectURL(new Blob([binaryStr], { type: file.type }))\n      })\n    );\n  };\n  reader.readAsBinaryString(file);\n}\n\nfunction ajouterDossier(formData) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      let file = formData.get('file');\n      const type = typeFromCerfa(file.name);\n      if (type === '') return reject(new Error(cerfaError(file)));\n      const cerfa = {\n        type: type,\n        numero: '0',\n        fichierId: type.id + '0',\n        dossierId: dossiersFixtures.length.toString()\n      };\n      let dossier = {\n        id: dossiersFixtures.length.toString(),\n        type: type,\n        userId: principal.id,\n        cerfa: cerfa,\n        piecesAJoindre: piecesAJoindre(type),\n        piecesJointes: [],\n        statuts: [],\n        statutsRestants: statuts,\n        messages: []\n      };\n      addStatut(dossier, 'DEPOSE');\n      saveInSessionStorage(dossier, '0', file);\n      dossiersFixtures.push(dossier);\n      return resolve();\n    }, waitingTime);\n  });\n}\n\nfunction checkCode(code, file) {\n  if (!file.name) return true; // hack because cypress dropzone command have undefined file.name\n  const type = typeFromCerfa(file.name);\n  let checked = true;\n  if (code.includes('cerfa')) checked = code === type.id + '0';\n  if (code.includes(type)) checked = code === type.id + 'd';\n  return checked;\n}\n\nfunction savePieceJointe(dossierId, numero, formData) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      let file = formData.get('file');\n      if (!checkCode(numero, file)) throw new Error(cerfaError(file));\n      let dossier = dossiersFixtures.find(dossier => dossier.id === dossierId);\n      saveInSessionStorage(dossier, numero, file);\n      dossier.piecesJointes.push({\n        type: dossier.type,\n        numero: numero,\n        fichierId: dossier.type.id + numero,\n        DossierId: dossierId\n      });\n      return resolve();\n    }, waitingTime);\n  });\n}\n\nfunction saveMessage(dossierId, contenu) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      let dossier = dossiersFixtures.find(dossier => dossier.id === dossierId);\n      addMessage(dossier, contenu);\n      return resolve();\n    }, waitingTime);\n  });\n}\n\nfunction lireFichier(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(function() {\n      return resolve(JSON.parse(sessionStorage.getItem(id)));\n    }, waitingTime);\n  });\n}\n\nconst auth = {\n  login,\n  isAuthenticated,\n  logout,\n  getUser,\n  isDeposant,\n  isMairie,\n  isInstructeur,\n  isBeta\n};\nconst dossiers = {\n  listerDossiers,\n  consulterDossier,\n  ajouterDossier,\n  savePieceJointe,\n  saveMessage,\n  lireFichier,\n  qualifierDossier,\n  declarerIncompletDossier,\n  declarerCompletDossier,\n  prendreDecision,\n  supprimerDossier\n};\n\nconst api = {\n  auth,\n  dossiers\n};\n\nexport default api;\n"],"sourceRoot":""}