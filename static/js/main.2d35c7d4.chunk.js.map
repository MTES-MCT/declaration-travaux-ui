{"version":3,"sources":["serviceWorker.js","context/index.js","app.js","index.js","context/user-context.js","utils/api.js","utils/session-storage.js","utils/auth.js","utils/bootstrap.js","context/auth-context.js"],"names":["Boolean","window","location","hostname","match","AppProviders","_ref","children","react_default","a","createElement","auth_context","user_context","loadUnAuthenticatedApp","Promise","all","__webpack_require__","e","then","bind","UnAuthenticatedApp","React","lazy","AuthenticatedApp","App","isAuthenticated","useUser","useEffect","Suspense","fallback","LinearProgress","ReactDOM","render","context","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__","UserProvider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_auth_context__WEBPACK_IMPORTED_MODULE_1__","UserContext","createContext","props","_useAuth$data","useAuth","data","user","Provider","Object","assign","value","useContext","undefined","Error","users","id","email","password","firstName","lastName","profile","api","auth","login","resolve","reject","setTimeout","find","ok","status","body","JSON","stringify","sessionStorage","key","expiresAt","message","logout","loadUserDossiers","userId","save","token","localStorage","setItem","remove","removeItem","load","getItem","keyToken","keyNonce","BehaviorSubject","tokenValue","saveNonce","length","charset","result","bytes","Uint8Array","crypto","randomBytes","forEach","c","randomString","hasTokenExpired","payload","now","getUser","parse","handleResponse","response","indexOf","reload","error","next","authenticated","getProfile","asObservable","bootstrapAppData","_callee","dossiers","regenerator_default","wrap","_context","prev","sent","abrupt","stop","AuthContext","AuthProvider","_React$useState","useState","_React$useState2","slicedToArray","firstAttemptFinished","setFirstAttemptFinished","_useAsync","useAsync","promiseFn","_useAsync$data","isRejected","isPending","isSettled","useLayoutEffect","css","color","register","form"],"mappings":"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","file":"static/js/main.2d35c7d4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n/* eslint no-console: \"off\" */\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AuthProvider } from './auth-context';\nimport { UserProvider } from './user-context';\n\nfunction AppProviders({ children }) {\n  return (\n    <AuthProvider>\n      <UserProvider>{children}</UserProvider>\n    </AuthProvider>\n  );\n}\nAppProviders.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default AppProviders;\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useUser } from 'context/user-context';\n\nconst loadUnAuthenticatedApp = () => import('./unauthenticated-app');\nconst UnAuthenticatedApp = React.lazy(loadUnAuthenticatedApp);\nconst AuthenticatedApp = React.lazy(() => import('./authenticated-app'));\n\nfunction App() {\n  const { isAuthenticated } = useUser();\n  React.useEffect(() => {\n    loadUnAuthenticatedApp();\n  }, [isAuthenticated]);\n  return (\n    <React.Suspense fallback={<LinearProgress />}>\n      {isAuthenticated ? <AuthenticatedApp /> : <UnAuthenticatedApp />}\n    </React.Suspense>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Page from './Page';\nimport * as serviceWorker from './serviceWorker';\nimport AppProviders from './context';\nimport App from 'app';\n\nReactDOM.render(\n  <AppProviders>\n    <App />\n  </AppProviders>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(<Page />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { useAuth } from './auth-context';\n\nconst UserContext = React.createContext();\n\nfunction UserProvider(props) {\n  const {\n    data: { user, isAuthenticated }\n  } = useAuth();\n  return <UserContext.Provider value={{ user, isAuthenticated }} {...props} />;\n}\n\nfunction useUser() {\n  const context = React.useContext(UserContext);\n  if (context === undefined) {\n    throw new Error(`useUser must be used within a UserProvider`);\n  }\n  return context;\n}\n\nexport { UserProvider, useUser };\n","const users = [\n  {\n    id: 'test',\n    email: 'test@test.fr',\n    password: 'test1234',\n    firstName: 'Test',\n    lastName: 'Test',\n    profile: 'test'\n  }\n];\n\nfunction login(email, password) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const user = users.find(\n        user => user.email === email && user.password === password\n      );\n      if (!user)\n        return resolve({\n          ok: false,\n          status: 400,\n          body: () =>\n            Promise.resolve(\n              JSON.stringify({ message: 'Email ou mot de passe incorrect' })\n            )\n        });\n      return resolve({\n        ok: true,\n        status: 200,\n        body: () =>\n          Promise.resolve(\n            JSON.stringify({\n              id: sessionStorage.key,\n              user: user,\n              expiresAt: -1\n            })\n          )\n      });\n    }, 500);\n  });\n}\n\nfunction logout() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve({\n        ok: true,\n        status: 200,\n        body: () => Promise.resolve(JSON.stringify({}))\n      });\n    }, 500);\n  });\n}\n\nfunction isAuthenticated() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve({\n        ok: true,\n        status: 200,\n        body: () => Promise.resolve(JSON.stringify({}))\n      });\n    }, 500);\n  });\n}\n\nfunction loadUserDossiers(userId) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve([]);\n    }, 500);\n  });\n}\n\nconst auth = {\n  login,\n  isAuthenticated,\n  logout,\n  loadUserDossiers\n};\n\nconst api = {\n  auth\n};\n\nexport default api;\n","function save(key, token) {\n  localStorage.setItem(key, token);\n}\nfunction load(key) {\n  return localStorage.getItem(key);\n}\nfunction remove(key) {\n  localStorage.removeItem(key);\n}\n\nconst sessionStorage = {\n  save,\n  remove,\n  load\n};\n\nexport default sessionStorage;\n","// import jwtDecode from 'jwt-decode';\nimport { now } from 'moment';\nimport api from 'utils/api';\nimport sessionStorage from 'utils/session-storage';\nimport { BehaviorSubject } from 'rxjs';\nimport crypto from 'crypto';\n\nconst keyToken = 'fake-jwt-token';\nconst keyNonce = 'nonce';\n\nconst token = new BehaviorSubject(loadToken());\n\nfunction tokenValue() {\n  return token.value;\n}\n\nfunction randomString(length) {\n  var charset =\n    '0123456789ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvwxyz-._~';\n  let result = '';\n\n  while (length > 0) {\n    var bytes = new Uint8Array(16);\n    var random = crypto.randomBytes(bytes.length);\n\n    // eslint-disable-next-line no-loop-func\n    random.forEach(function(c) {\n      if (length === 0) {\n        return;\n      }\n      if (c < charset.length) {\n        result += charset[c];\n        length--;\n      }\n    });\n  }\n  return result;\n}\n\nfunction saveNonce() {\n  sessionStorage.save(keyNonce, randomString(16));\n}\n\n// function loadNonce() {\n//   return sessionStorage.load(keyNonce);\n// }\n\nfunction deleteNonce() {\n  sessionStorage.remove(keyNonce);\n}\n\nfunction loadToken() {\n  return sessionStorage.load(keyToken);\n}\n\nfunction saveToken(payload) {\n  sessionStorage.save(keyToken, payload);\n  token.next(payload);\n}\n\nfunction deleteToken() {\n  sessionStorage.remove(keyToken);\n  token.next(null);\n}\n\nfunction hasTokenExpired(payload) {\n  if (payload.expiresAt < 0) return false;\n  return now() - payload.expiresAt >= 0;\n}\n\n// function isTokenValid(payload) {\n//   // let jwt = jwtDecode(token);\n//   let jwt = payload;\n//   return jwt.nonce === loadNonce();\n// }\n\nfunction getProfile() {\n  if (!getUser()) return '';\n  return getUser().profile;\n}\n\nfunction getUser() {\n  var user = null;\n  if (tokenValue()) user = JSON.parse(tokenValue()).user;\n  return user;\n}\n\n// function getIdToken() {\n//   return keyToken;\n// }\n\nfunction isAuthenticated() {\n  var authenticated = false;\n  if (tokenValue()) authenticated = !hasTokenExpired(tokenValue());\n  return authenticated;\n}\n\nfunction handleResponse(response) {\n  return response.body().then(body => {\n    const data = body && JSON.parse(body);\n    if (!response.ok) {\n      if ([401, 403].indexOf(response.status) !== -1) {\n        // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n        logout();\n        window.location.reload(true);\n      }\n\n      const error = data && data.message;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nfunction login(email, password) {\n  return api.auth\n    .login(email, password)\n    .then(handleResponse)\n    .then(data => {\n      saveNonce();\n      saveToken(JSON.stringify(data));\n      return { user: data, isAuthenticated: true };\n    });\n}\n\nfunction logout() {\n  return api.auth\n    .logout()\n    .then(handleResponse)\n    .then(data => {\n      deleteToken();\n      deleteNonce();\n      return data;\n    });\n}\n\nconst auth = {\n  login,\n  logout,\n  isAuthenticated,\n  hasTokenExpired,\n  getProfile,\n  getUser,\n  token: token.asObservable(),\n  tokenValue\n};\n\nexport default auth;\n","import api from './api';\n\nasync function bootstrapAppData() {\n  const { dossiers } = await api.loadUserDossiers(0);\n  return {\n    dossiers\n  };\n}\n\nexport { bootstrapAppData };\n","import React from 'react';\nimport auth from 'utils/auth';\nimport { useAsync } from 'react-async';\nimport { bootstrapAppData } from 'utils/bootstrap';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst AuthContext = React.createContext();\n\nfunction AuthProvider(props) {\n  const [firstAttemptFinished, setFirstAttemptFinished] = React.useState(false);\n  const {\n    data = {\n      user: auth.getUser(),\n      isAuthenticated: auth.isAuthenticated(),\n      dossiers: []\n    },\n    error,\n    isRejected,\n    isPending,\n    isSettled,\n    reload\n  } = useAsync({\n    promiseFn: bootstrapAppData\n  });\n\n  React.useLayoutEffect(() => {\n    if (isSettled) {\n      setFirstAttemptFinished(true);\n    }\n  }, [isSettled]);\n\n  if (!firstAttemptFinished) {\n    if (isPending) {\n      return <LinearProgress />;\n    }\n    if (isRejected) {\n      return (\n        <div css={{ color: 'red' }}>\n          <p>{`Oops un problème est survenu au démarrage. Tentez de rafraîchir la page.`}</p>\n          <pre>{error.message}</pre>\n        </div>\n      );\n    }\n  }\n\n  const login = (email, password) => auth.login(email, password).then(reload);\n  const register = form => auth.register(form).then(reload);\n  const logout = () => auth.logout().then(reload);\n\n  return (\n    <AuthContext.Provider\n      value={{ data, login, logout, register }}\n      {...props}\n    />\n  );\n}\n\nfunction useAuth() {\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(`useAuth must be used within a AuthProvider`);\n  }\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n"],"sourceRoot":""}