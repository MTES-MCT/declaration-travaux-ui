defaults: &defaults
  docker:
    - image: circleci/node:10.15.3-browsers
  working_directory: ~/project/rieau-ui

version: 2
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # default if no checksum found
          - v1-dependencies-
      - run: npm ci
      - save_cache:
          paths:
            - '~/.cache'
            - '~/.npm'
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: '~'
          paths:
            - .cache
            - .npm
            - project/rieau-ui
  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: '~'
      - run: 
          command: npm run lint
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: '~'
      - run: cp .env.sample .env
      - run: 
          environment: 
            - REACT_APP_API_MOCK: true
            - REACT_APP_BASENAME: /rieau-ui
            - REACT_APP_DOMAIN: https://mtes-mct.github.io
            - PUBLIC_URL: $REACT_APP_DOMAIN$REACT_APP_BASENAME
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - build
  check-vulnerabilities:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: '~'
      - run: npm audit
  unit-tests:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: '~'
      - run: cp .env.sample .env
      - run: npm run test:unit
  integration-tests:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: '~'
      - run: cp .env.sample .env
      - run: REACT_APP_API_MOCK=true npm run test:integration
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots
  deploy-demo:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: '~'
      - run: cp .env.sample .env
      - run: 
          environment:
            - REACT_APP_API_MOCK: true
            - REACT_APP_BASENAME: /rieau-ui
            - REACT_APP_DOMAIN: https://mtes-mct.github.io
            - PUBLIC_URL: $REACT_APP_DOMAIN$REACT_APP_BASENAME
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "<circleci>"
            git config user.name "CircleCi"
            npm run deploy            
  deploy-docker:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: '~/'
      - run: cp .env.sample .env
      - setup_remote_docker
      - run: 
          command: |
            if [[ -z "$DOCKERHUB_USER" || -z "$DOCKERHUB_PASSWORD" ]]; then
              echo "Missing DOCKERHUB_USER or DOCKERHUB_PASSWORD environment variables!"
              exit 1
            fi
            docker build -t tristanrobert/rieau-ui:$CIRCLE_SHA1 -f Dockerfile .
            echo "$DOCKERHUB_PASSWORD" | docker login -u $DOCKERHUB_USER --password-stdin
            docker push tristanrobert/rieau-ui:$CIRCLE_SHA1
            if [[ "$CIRCLE_BRANCH" = "master" ]]; then
              docker tag tristanrobert/rieau-ui:$CIRCLE_SHA1 tristanrobert/rieau-ui:latest
              docker push tristanrobert/rieau-ui:latest
            fi

workflows:
  version: 2
  weekly-dependency-check:
    triggers:
      - schedule:
          cron: "0 0 * * 0" # every sunday at midnight
          filters:
            branches:
              only:
                - master
    jobs:
      - prepare:
          requires: []
      - check-vulnerabilities:
          requires:
            - prepare

  build_accept_deploy:
    jobs:
      - prepare
      - lint:
          requires:
            - prepare
      - build:
          requires:
            - lint
      - unit-tests:
          requires:
            - build
      - integration-tests:
          requires:
            - unit-tests
      - deploy-demo:
          requires:
            - integration-tests
          filters:
            branches:
              only:
                - master
      - deploy-docker:
          requires:
            - integration-tests
          filters:
            branches:
              only:
                - master

