{"version":3,"sources":["serviceWorker.js","context/index.js","app.js","index.js","utils/session-storage.js","utils/auth.js","context/user-context.js","utils/bootstrap.js","context/auth-context.js","utils/api.js"],"names":["Boolean","window","location","hostname","match","AppProviders","_ref","children","react_default","a","createElement","auth_context","user_context","loadUnAuthenticatedApp","Promise","all","__webpack_require__","e","then","bind","UnAuthenticatedApp","React","lazy","AuthenticatedApp","App","isAuthenticated","useUser","useEffect","Suspense","fallback","LinearProgress","ReactDOM","render","context","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister","sessionStorage","save","key","token","localStorage","setItem","remove","removeItem","load","getItem","keyToken","keyNonce","BehaviorSubject","tokenValue","value","saveNonce","length","charset","result","bytes","Uint8Array","crypto","randomBytes","forEach","c","randomString","hasTokenExpired","payload","expiresAt","now","getUser","user","JSON","parse","auth","login","email","password","api","handleResponse","data","stringify","next","logout","register","firstName","lastName","reset","confirm","idToken","changePassword","authenticated","getProfile","profile","asObservable","d","__webpack_exports__","UserProvider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_auth_context__WEBPACK_IMPORTED_MODULE_1__","UserContext","createContext","props","_useAuth$data","useAuth","Provider","Object","assign","useContext","undefined","Error","bootstrapAppData","_callee","dossiers","regenerator_default","wrap","_context","prev","loadUserDossiers","sent","abrupt","stop","AuthContext","AuthProvider","_React$useState","useState","_React$useState2","slicedToArray","firstAttemptFinished","setFirstAttemptFinished","_useAsync","useAsync","promiseFn","_useAsync$data","error","isRejected","isPending","isSettled","reload","useLayoutEffect","css","color","message","users","id","tokens","userId","type","resolve","reject","setTimeout","ok","status","body","findUserByEmailToken","tokenFound","find","t","existedUser","foundToken","newUser","push","response","indexOf"],"mappings":"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","file":"static/js/main.1aa5e51c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n/* eslint no-console: \"off\" */\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AuthProvider } from './auth-context';\nimport { UserProvider } from './user-context';\n\nfunction AppProviders({ children }) {\n  return (\n    <AuthProvider>\n      <UserProvider>{children}</UserProvider>\n    </AuthProvider>\n  );\n}\nAppProviders.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default AppProviders;\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useUser } from 'context/user-context';\n\nconst loadUnAuthenticatedApp = () => import('./unauthenticated-app');\nconst UnAuthenticatedApp = React.lazy(loadUnAuthenticatedApp);\nconst AuthenticatedApp = React.lazy(() => import('./authenticated-app'));\n\nfunction App() {\n  const { isAuthenticated } = useUser();\n  React.useEffect(() => {\n    loadUnAuthenticatedApp();\n  }, [isAuthenticated]);\n  return (\n    <React.Suspense fallback={<LinearProgress />}>\n      {isAuthenticated ? <AuthenticatedApp /> : <UnAuthenticatedApp />}\n    </React.Suspense>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Page from './Page';\nimport * as serviceWorker from './serviceWorker';\nimport AppProviders from './context';\nimport App from 'app';\n\nReactDOM.render(\n  <AppProviders>\n    <App />\n  </AppProviders>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(<Page />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function save(key, token) {\n  localStorage.setItem(key, token);\n}\nfunction load(key) {\n  return localStorage.getItem(key);\n}\nfunction remove(key) {\n  localStorage.removeItem(key);\n}\n\nconst sessionStorage = {\n  save,\n  remove,\n  load\n};\n\nexport default sessionStorage;\n","// import jwtDecode from 'jwt-decode';\nimport { now } from 'moment';\nimport api from 'utils/api';\nimport sessionStorage from 'utils/session-storage';\nimport { BehaviorSubject } from 'rxjs';\nimport crypto from 'crypto';\n\nconst keyToken = 'fake-jwt-token';\nconst keyNonce = 'nonce';\n\nconst token = new BehaviorSubject(loadToken());\n\nfunction tokenValue() {\n  return token.value;\n}\n\nfunction randomString(length) {\n  var charset =\n    '0123456789ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvwxyz-._~';\n  let result = '';\n\n  while (length > 0) {\n    var bytes = new Uint8Array(16);\n    var random = crypto.randomBytes(bytes.length);\n\n    // eslint-disable-next-line no-loop-func\n    random.forEach(function(c) {\n      if (length === 0) {\n        return;\n      }\n      if (c < charset.length) {\n        result += charset[c];\n        length--;\n      }\n    });\n  }\n  return result;\n}\n\nfunction saveNonce() {\n  sessionStorage.save(keyNonce, randomString(16));\n}\n\n// function loadNonce() {\n//   return sessionStorage.load(keyNonce);\n// }\n\nfunction deleteNonce() {\n  sessionStorage.remove(keyNonce);\n}\n\nfunction loadToken() {\n  return sessionStorage.load(keyToken);\n}\n\nfunction saveToken(payload) {\n  sessionStorage.save(keyToken, payload);\n  token.next(payload);\n}\n\nfunction deleteToken() {\n  sessionStorage.remove(keyToken);\n  token.next(null);\n}\n\nfunction hasTokenExpired(payload) {\n  if (payload.expiresAt < 0) return false;\n  return now() - payload.expiresAt >= 0;\n}\n\n// function isTokenValid(payload) {\n//   // let jwt = jwtDecode(token);\n//   let jwt = payload;\n//   return jwt.nonce === loadNonce();\n// }\n\nfunction getProfile() {\n  if (!getUser()) return '';\n  return getUser().profile;\n}\n\nfunction getUser() {\n  var user = null;\n  if (tokenValue()) user = JSON.parse(tokenValue()).user;\n  return user;\n}\n\n// function getIdToken() {\n//   return keyToken;\n// }\n\nfunction isAuthenticated() {\n  var authenticated = false;\n  if (tokenValue()) authenticated = !hasTokenExpired(tokenValue());\n  return authenticated;\n}\n\nfunction login(email, password) {\n  return api.auth\n    .login(email, password)\n    .then(api.handleResponse)\n    .then(data => {\n      saveNonce();\n      saveToken(JSON.stringify(data));\n      return { user: data, isAuthenticated: true };\n    });\n}\n\nfunction logout() {\n  return api.auth\n    .logout()\n    .then(api.handleResponse)\n    .then(data => {\n      deleteToken();\n      deleteNonce();\n      return data;\n    });\n}\n\nfunction register(firstName, lastName, email, password) {\n  return api.auth\n    .register(firstName, lastName, email, password)\n    .then(api.handleResponse)\n    .then(data => {\n      return { user: data };\n    });\n}\n\nfunction reset(email) {\n  return api.auth\n    .reset(email)\n    .then(api.handleResponse)\n    .then(data => {\n      return { user: data };\n    });\n}\n\nfunction confirm(idToken) {\n  return api.auth\n    .confirm(idToken)\n    .then(api.handleResponse)\n    .then(data => {\n      return data;\n    });\n}\n\nfunction changePassword(idToken, password) {\n  return api.auth\n    .changePassword(idToken, password)\n    .then(api.handleResponse)\n    .then(data => {\n      return data;\n    });\n}\n\nconst auth = {\n  login,\n  logout,\n  register,\n  reset,\n  confirm,\n  changePassword,\n  isAuthenticated,\n  hasTokenExpired,\n  getProfile,\n  getUser,\n  token: token.asObservable(),\n  tokenValue\n};\n\nexport default auth;\n","import React from 'react';\nimport { useAuth } from './auth-context';\n\nconst UserContext = React.createContext();\n\nfunction UserProvider(props) {\n  const {\n    data: { user, isAuthenticated }\n  } = useAuth();\n  return <UserContext.Provider value={{ user, isAuthenticated }} {...props} />;\n}\n\nfunction useUser() {\n  const context = React.useContext(UserContext);\n  if (context === undefined) {\n    throw new Error(`useUser must be used within a UserProvider`);\n  }\n  return context;\n}\n\nexport { UserProvider, useUser };\n","import api from './api';\n\nasync function bootstrapAppData() {\n  const { dossiers } = await api.loadUserDossiers(0);\n  return {\n    dossiers\n  };\n}\n\nexport { bootstrapAppData };\n","import React from 'react';\nimport auth from 'utils/auth';\nimport { useAsync } from 'react-async';\nimport { bootstrapAppData } from 'utils/bootstrap';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst AuthContext = React.createContext();\n\nfunction AuthProvider(props) {\n  const [firstAttemptFinished, setFirstAttemptFinished] = React.useState(false);\n  const {\n    data = {\n      user: auth.getUser(),\n      isAuthenticated: auth.isAuthenticated(),\n      dossiers: []\n    },\n    error,\n    isRejected,\n    isPending,\n    isSettled,\n    reload\n  } = useAsync({\n    promiseFn: bootstrapAppData\n  });\n\n  React.useLayoutEffect(() => {\n    if (isSettled) {\n      setFirstAttemptFinished(true);\n    }\n  }, [isSettled]);\n\n  if (!firstAttemptFinished) {\n    if (isPending) {\n      return <LinearProgress />;\n    }\n    if (isRejected) {\n      return (\n        <div css={{ color: 'red' }}>\n          <p>{`Oops un problème est survenu au démarrage. Tentez de rafraîchir la page.`}</p>\n          <pre>{error.message}</pre>\n        </div>\n      );\n    }\n  }\n\n  const login = (email, password) => auth.login(email, password).then(reload);\n  const logout = () => auth.logout().then(reload);\n\n  return <AuthContext.Provider value={{ data, login, logout }} {...props} />;\n}\n\nfunction useAuth() {\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(`useAuth must be used within a AuthProvider`);\n  }\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","let users = [\n  {\n    id: 'test',\n    email: 'test@test.fr',\n    password: 'test1234',\n    firstName: 'Test',\n    lastName: 'Test',\n    profile: 'test'\n  }\n];\nlet tokens = [\n  {\n    id: '1',\n    userId: 'test',\n    type: 'reset'\n  },\n  {\n    id: '0',\n    userId: 'test',\n    type: 'register'\n  }\n];\n\nfunction register(firstName, lastName, email, password) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const existedUser = users.find(user => user.email === email);\n      const newUser = {\n        id: email,\n        email: email,\n        password: password,\n        firstName: firstName,\n        lastName: lastName,\n        profile: 'test'\n      };\n      if (existedUser)\n        return resolve({\n          ok: false,\n          status: 400,\n          body: () =>\n            Promise.resolve(\n              JSON.stringify({ message: 'Un compte avec ce mail existe déjà' })\n            )\n        });\n\n      users.push(newUser);\n      return resolve({\n        ok: true,\n        status: 200,\n        body: () => Promise.resolve(JSON.stringify(newUser))\n      });\n    }, 500);\n  });\n}\n\nfunction reset(email) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const existedUser = users.find(user => user.email === email);\n      if (!existedUser)\n        return resolve({\n          ok: false,\n          status: 400,\n          body: () =>\n            Promise.resolve(\n              JSON.stringify({ message: \"Cet email n'a pas de compte.\" })\n            )\n        });\n      return resolve({\n        ok: true,\n        status: 200,\n        body: () => Promise.resolve(JSON.stringify({}))\n      });\n    }, 500);\n  });\n}\n\nfunction confirm(id) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const user = findUserByEmailToken(id);\n      const foundToken = tokens.find(c => c.id === id);\n      if (!user || !foundToken)\n        return resolve({\n          ok: false,\n          status: 400,\n          body: () =>\n            Promise.resolve(\n              JSON.stringify({\n                message: \"Cette demande de confirmation n'existe pas.\"\n              })\n            )\n        });\n      return resolve({\n        ok: true,\n        status: 200,\n        body: () => Promise.resolve(JSON.stringify({ type: foundToken.type }))\n      });\n    }, 500);\n  });\n}\n\nfunction login(email, password) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const user = users.find(\n        user => user.email === email && user.password === password\n      );\n      if (!user)\n        return resolve({\n          ok: false,\n          status: 400,\n          body: () =>\n            Promise.resolve(\n              JSON.stringify({ message: 'Email ou mot de passe incorrect' })\n            )\n        });\n      return resolve({\n        ok: true,\n        status: 200,\n        body: () =>\n          Promise.resolve(\n            JSON.stringify({\n              id: sessionStorage.key,\n              user: user,\n              expiresAt: -1\n            })\n          )\n      });\n    }, 500);\n  });\n}\n\nfunction logout() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve({\n        ok: true,\n        status: 200,\n        body: () => Promise.resolve(JSON.stringify({}))\n      });\n    }, 500);\n  });\n}\n\nfunction isAuthenticated() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve({\n        ok: true,\n        status: 200,\n        body: () => Promise.resolve(JSON.stringify({}))\n      });\n    }, 500);\n  });\n}\n\nfunction loadUserDossiers(userId) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      return resolve([]);\n    }, 500);\n  });\n}\n\nfunction handleResponse(response) {\n  return response.body().then(body => {\n    const data = body && JSON.parse(body);\n    if (!response.ok) {\n      if ([401, 403].indexOf(response.status) !== -1) {\n        // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n        logout();\n        window.location.reload(true);\n      }\n\n      const error = data && data.message;\n      return Promise.reject(error);\n    }\n    return data;\n  });\n}\n\nfunction findUserByEmailToken(token) {\n  const tokenFound = tokens.find(t => t.id === token);\n  const userId = tokenFound ? tokenFound.userId : null;\n  return users.find(user => user.id === userId);\n}\n\nfunction changePassword(idToken, password) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const tokenFound = tokens.find(t => t.id === idToken);\n      const user = findUserByEmailToken(idToken);\n      if (!user || !tokenFound || tokenFound.type !== 'reset')\n        return resolve({\n          ok: false,\n          status: 400,\n          body: () =>\n            Promise.resolve(JSON.stringify({ message: 'Token inconnu' }))\n        });\n      user.password = password;\n      return resolve({\n        ok: true,\n        status: 200,\n        body: () => Promise.resolve(JSON.stringify({}))\n      });\n    }, 500);\n  });\n}\n\nconst auth = {\n  login,\n  isAuthenticated,\n  changePassword,\n  logout,\n  reset,\n  confirm,\n  register,\n  loadUserDossiers\n};\n\nconst api = {\n  auth,\n  handleResponse\n};\n\nexport default api;\n"],"sourceRoot":""}